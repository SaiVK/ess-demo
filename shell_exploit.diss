
shell_exploit:     file format elf32-i386


Disassembly of section .interp:

000001b4 <.interp>:
 1b4:	2f                   	das    
 1b5:	6c                   	ins    BYTE PTR es:[edi],dx
 1b6:	69 62 2f 6c 64 2d 6c 	imul   esp,DWORD PTR [edx+0x2f],0x6c2d646c
 1bd:	69 6e 75 78 2e 73 6f 	imul   ebp,DWORD PTR [esi+0x75],0x6f732e78
 1c4:	2e 32 00             	xor    al,BYTE PTR cs:[eax]

Disassembly of section .note.gnu.build-id:

000001c8 <.note.gnu.build-id>:
 1c8:	04 00                	add    al,0x0
 1ca:	00 00                	add    BYTE PTR [eax],al
 1cc:	14 00                	adc    al,0x0
 1ce:	00 00                	add    BYTE PTR [eax],al
 1d0:	03 00                	add    eax,DWORD PTR [eax]
 1d2:	00 00                	add    BYTE PTR [eax],al
 1d4:	47                   	inc    edi
 1d5:	4e                   	dec    esi
 1d6:	55                   	push   ebp
 1d7:	00 fb                	add    bl,bh
 1d9:	16                   	push   ss
 1da:	32 60 4f             	xor    ah,BYTE PTR [eax+0x4f]
 1dd:	74 f4                	je     1d3 <_init-0xe2d>
 1df:	2c 22                	sub    al,0x22
 1e1:	87 f4                	xchg   esp,esi
 1e3:	8d 26                	lea    esp,[esi]
 1e5:	0a 25 93 e3 32 71    	or     ah,BYTE PTR ds:0x7132e393
 1eb:	4a                   	dec    edx

Disassembly of section .note.gnu.property:

000001ec <.note.gnu.property>:
 1ec:	04 00                	add    al,0x0
 1ee:	00 00                	add    BYTE PTR [eax],al
 1f0:	0c 00                	or     al,0x0
 1f2:	00 00                	add    BYTE PTR [eax],al
 1f4:	05 00 00 00 47       	add    eax,0x47000000
 1f9:	4e                   	dec    esi
 1fa:	55                   	push   ebp
 1fb:	00 02                	add    BYTE PTR [edx],al
 1fd:	00 00                	add    BYTE PTR [eax],al
 1ff:	c0 04 00 00          	rol    BYTE PTR [eax+eax*1],0x0
 203:	00 03                	add    BYTE PTR [ebx],al
 205:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .note.ABI-tag:

00000208 <.note.ABI-tag>:
 208:	04 00                	add    al,0x0
 20a:	00 00                	add    BYTE PTR [eax],al
 20c:	10 00                	adc    BYTE PTR [eax],al
 20e:	00 00                	add    BYTE PTR [eax],al
 210:	01 00                	add    DWORD PTR [eax],eax
 212:	00 00                	add    BYTE PTR [eax],al
 214:	47                   	inc    edi
 215:	4e                   	dec    esi
 216:	55                   	push   ebp
 217:	00 00                	add    BYTE PTR [eax],al
 219:	00 00                	add    BYTE PTR [eax],al
 21b:	00 03                	add    BYTE PTR [ebx],al
 21d:	00 00                	add    BYTE PTR [eax],al
 21f:	00 02                	add    BYTE PTR [edx],al
 221:	00 00                	add    BYTE PTR [eax],al
 223:	00 00                	add    BYTE PTR [eax],al
 225:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .gnu.hash:

00000228 <.gnu.hash>:
 228:	02 00                	add    al,BYTE PTR [eax]
 22a:	00 00                	add    BYTE PTR [eax],al
 22c:	09 00                	or     DWORD PTR [eax],eax
 22e:	00 00                	add    BYTE PTR [eax],al
 230:	01 00                	add    DWORD PTR [eax],eax
 232:	00 00                	add    BYTE PTR [eax],al
 234:	05 00 00 00 00       	add    eax,0x0
 239:	20 00                	and    BYTE PTR [eax],al
 23b:	20 00                	and    BYTE PTR [eax],al
 23d:	00 00                	add    BYTE PTR [eax],al
 23f:	00 09                	add    BYTE PTR [ecx],cl
 241:	00 00                	add    BYTE PTR [eax],al
 243:	00                   	.byte 0x0
 244:	ad                   	lods   eax,DWORD PTR ds:[esi]
 245:	4b                   	dec    ebx
 246:	e3 c0                	jecxz  208 <_init-0xdf8>

Disassembly of section .dynsym:

00000248 <.dynsym>:
	...
 258:	62 00                	bound  eax,QWORD PTR [eax]
	...
 262:	00 00                	add    BYTE PTR [eax],al
 264:	20 00                	and    BYTE PTR [eax],al
 266:	00 00                	add    BYTE PTR [eax],al
 268:	24 00                	and    al,0x0
	...
 272:	00 00                	add    BYTE PTR [eax],al
 274:	12 00                	adc    al,BYTE PTR [eax]
 276:	00 00                	add    BYTE PTR [eax],al
 278:	1a 00                	sbb    al,BYTE PTR [eax]
	...
 282:	00 00                	add    BYTE PTR [eax],al
 284:	12 00                	adc    al,BYTE PTR [eax]
 286:	00 00                	add    BYTE PTR [eax],al
 288:	2b 00                	sub    eax,DWORD PTR [eax]
	...
 292:	00 00                	add    BYTE PTR [eax],al
 294:	22 00                	and    al,BYTE PTR [eax]
 296:	00 00                	add    BYTE PTR [eax],al
 298:	1f                   	pop    ds
	...
 2a1:	00 00                	add    BYTE PTR [eax],al
 2a3:	00 12                	add    BYTE PTR [edx],dl
 2a5:	00 00                	add    BYTE PTR [eax],al
 2a7:	00 7e 00             	add    BYTE PTR [esi+0x0],bh
	...
 2b2:	00 00                	add    BYTE PTR [eax],al
 2b4:	20 00                	and    BYTE PTR [eax],al
 2b6:	00 00                	add    BYTE PTR [eax],al
 2b8:	3a 00                	cmp    al,BYTE PTR [eax]
	...
 2c2:	00 00                	add    BYTE PTR [eax],al
 2c4:	12 00                	adc    al,BYTE PTR [eax]
 2c6:	00 00                	add    BYTE PTR [eax],al
 2c8:	8d 00                	lea    eax,[eax]
	...
 2d2:	00 00                	add    BYTE PTR [eax],al
 2d4:	20 00                	and    BYTE PTR [eax],al
 2d6:	00 00                	add    BYTE PTR [eax],al
 2d8:	0b 00                	or     eax,DWORD PTR [eax]
 2da:	00 00                	add    BYTE PTR [eax],al
 2dc:	04 20                	add    al,0x20
 2de:	00 00                	add    BYTE PTR [eax],al
 2e0:	04 00                	add    al,0x0
 2e2:	00 00                	add    BYTE PTR [eax],al
 2e4:	11 00                	adc    DWORD PTR [eax],eax
 2e6:	12 00                	adc    al,BYTE PTR [eax]

Disassembly of section .dynstr:

000002e8 <.dynstr>:
 2e8:	00 6c 69 62          	add    BYTE PTR [ecx+ebp*2+0x62],ch
 2ec:	63 2e                	arpl   WORD PTR [esi],bp
 2ee:	73 6f                	jae    35f <_init-0xca1>
 2f0:	2e 36 00 5f 49       	cs add BYTE PTR ss:[edi+0x49],bl
 2f5:	4f                   	dec    edi
 2f6:	5f                   	pop    edi
 2f7:	73 74                	jae    36d <_init-0xc93>
 2f9:	64 69 6e 5f 75 73 65 	imul   ebp,DWORD PTR fs:[esi+0x5f],0x64657375
 300:	64 
 301:	00 67 65             	add    BYTE PTR [edi+0x65],ah
 304:	74 73                	je     379 <_init-0xc87>
 306:	00 70 75             	add    BYTE PTR [eax+0x75],dh
 309:	74 73                	je     37e <_init-0xc82>
 30b:	00 70 72             	add    BYTE PTR [eax+0x72],dh
 30e:	69 6e 74 66 00 5f 5f 	imul   ebp,DWORD PTR [esi+0x74],0x5f5f0066
 315:	63 78 61             	arpl   WORD PTR [eax+0x61],di
 318:	5f                   	pop    edi
 319:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [esi+0x61],0x696c
 31f:	7a 65                	jp     386 <_init-0xc7a>
 321:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 324:	6c                   	ins    BYTE PTR es:[edi],dx
 325:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [edx+0x63],0x6174735f
 32c:	72 74                	jb     3a2 <_init-0xc5e>
 32e:	5f                   	pop    edi
 32f:	6d                   	ins    DWORD PTR es:[edi],dx
 330:	61                   	popa   
 331:	69 6e 00 47 4c 49 42 	imul   ebp,DWORD PTR [esi+0x0],0x42494c47
 338:	43                   	inc    ebx
 339:	5f                   	pop    edi
 33a:	32 2e                	xor    ch,BYTE PTR [esi]
 33c:	31 2e                	xor    DWORD PTR [esi],ebp
 33e:	33 00                	xor    eax,DWORD PTR [eax]
 340:	47                   	inc    edi
 341:	4c                   	dec    esp
 342:	49                   	dec    ecx
 343:	42                   	inc    edx
 344:	43                   	inc    ebx
 345:	5f                   	pop    edi
 346:	32 2e                	xor    ch,BYTE PTR [esi]
 348:	30 00                	xor    BYTE PTR [eax],al
 34a:	5f                   	pop    edi
 34b:	49                   	dec    ecx
 34c:	54                   	push   esp
 34d:	4d                   	dec    ebp
 34e:	5f                   	pop    edi
 34f:	64 65 72 65          	fs gs jb 3b8 <_init-0xc48>
 353:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [bp+di+0x74],0x4d547265
 35a:	4d 
 35b:	43                   	inc    ebx
 35c:	6c                   	ins    BYTE PTR es:[edi],dx
 35d:	6f                   	outs   dx,DWORD PTR ds:[esi]
 35e:	6e                   	outs   dx,BYTE PTR ds:[esi]
 35f:	65 54                	gs push esp
 361:	61                   	popa   
 362:	62 6c 65 00          	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
 366:	5f                   	pop    edi
 367:	5f                   	pop    edi
 368:	67 6d                	ins    DWORD PTR es:[di],dx
 36a:	6f                   	outs   dx,DWORD PTR ds:[esi]
 36b:	6e                   	outs   dx,BYTE PTR ds:[esi]
 36c:	5f                   	pop    edi
 36d:	73 74                	jae    3e3 <_init-0xc1d>
 36f:	61                   	popa   
 370:	72 74                	jb     3e6 <_init-0xc1a>
 372:	5f                   	pop    edi
 373:	5f                   	pop    edi
 374:	00 5f 49             	add    BYTE PTR [edi+0x49],bl
 377:	54                   	push   esp
 378:	4d                   	dec    ebp
 379:	5f                   	pop    edi
 37a:	72 65                	jb     3e1 <_init-0xc1f>
 37c:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [bp+di+0x74],0x4d547265
 383:	4d 
 384:	43                   	inc    ebx
 385:	6c                   	ins    BYTE PTR es:[edi],dx
 386:	6f                   	outs   dx,DWORD PTR ds:[esi]
 387:	6e                   	outs   dx,BYTE PTR ds:[esi]
 388:	65 54                	gs push esp
 38a:	61                   	popa   
 38b:	62 6c 65 00          	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]

Disassembly of section .gnu.version:

00000390 <.gnu.version>:
 390:	00 00                	add    BYTE PTR [eax],al
 392:	00 00                	add    BYTE PTR [eax],al
 394:	02 00                	add    al,BYTE PTR [eax]
 396:	02 00                	add    al,BYTE PTR [eax]
 398:	03 00                	add    eax,DWORD PTR [eax]
 39a:	02 00                	add    al,BYTE PTR [eax]
 39c:	00 00                	add    BYTE PTR [eax],al
 39e:	02 00                	add    al,BYTE PTR [eax]
 3a0:	00 00                	add    BYTE PTR [eax],al
 3a2:	01 00                	add    DWORD PTR [eax],eax

Disassembly of section .gnu.version_r:

000003a4 <.gnu.version_r>:
 3a4:	01 00                	add    DWORD PTR [eax],eax
 3a6:	02 00                	add    al,BYTE PTR [eax]
 3a8:	01 00                	add    DWORD PTR [eax],eax
 3aa:	00 00                	add    BYTE PTR [eax],al
 3ac:	10 00                	adc    BYTE PTR [eax],al
 3ae:	00 00                	add    BYTE PTR [eax],al
 3b0:	00 00                	add    BYTE PTR [eax],al
 3b2:	00 00                	add    BYTE PTR [eax],al
 3b4:	73 1f                	jae    3d5 <_init-0xc2b>
 3b6:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [ecx],0x30000
 3bc:	4c                   	dec    esp
 3bd:	00 00                	add    BYTE PTR [eax],al
 3bf:	00 10                	add    BYTE PTR [eax],dl
 3c1:	00 00                	add    BYTE PTR [eax],al
 3c3:	00 10                	add    BYTE PTR [eax],dl
 3c5:	69 69 0d 00 00 02 00 	imul   ebp,DWORD PTR [ecx+0xd],0x20000
 3cc:	58                   	pop    eax
 3cd:	00 00                	add    BYTE PTR [eax],al
 3cf:	00 00                	add    BYTE PTR [eax],al
 3d1:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .rel.dyn:

000003d4 <.rel.dyn>:
 3d4:	d0 3e                	sar    BYTE PTR [esi],1
 3d6:	00 00                	add    BYTE PTR [eax],al
 3d8:	08 00                	or     BYTE PTR [eax],al
 3da:	00 00                	add    BYTE PTR [eax],al
 3dc:	d4 3e                	aam    0x3e
 3de:	00 00                	add    BYTE PTR [eax],al
 3e0:	08 00                	or     BYTE PTR [eax],al
 3e2:	00 00                	add    BYTE PTR [eax],al
 3e4:	f8                   	clc    
 3e5:	3f                   	aas    
 3e6:	00 00                	add    BYTE PTR [eax],al
 3e8:	08 00                	or     BYTE PTR [eax],al
 3ea:	00 00                	add    BYTE PTR [eax],al
 3ec:	04 40                	add    al,0x40
 3ee:	00 00                	add    BYTE PTR [eax],al
 3f0:	08 00                	or     BYTE PTR [eax],al
 3f2:	00 00                	add    BYTE PTR [eax],al
 3f4:	ec                   	in     al,dx
 3f5:	3f                   	aas    
 3f6:	00 00                	add    BYTE PTR [eax],al
 3f8:	06                   	push   es
 3f9:	01 00                	add    DWORD PTR [eax],eax
 3fb:	00 f0                	add    al,dh
 3fd:	3f                   	aas    
 3fe:	00 00                	add    BYTE PTR [eax],al
 400:	06                   	push   es
 401:	04 00                	add    al,0x0
 403:	00 f4                	add    ah,dh
 405:	3f                   	aas    
 406:	00 00                	add    BYTE PTR [eax],al
 408:	06                   	push   es
 409:	06                   	push   es
 40a:	00 00                	add    BYTE PTR [eax],al
 40c:	fc                   	cld    
 40d:	3f                   	aas    
 40e:	00 00                	add    BYTE PTR [eax],al
 410:	06                   	push   es
 411:	08 00                	or     BYTE PTR [eax],al
	...

Disassembly of section .rel.plt:

00000414 <.rel.plt>:
 414:	dc 3f                	fdivr  QWORD PTR [edi]
 416:	00 00                	add    BYTE PTR [eax],al
 418:	07                   	pop    es
 419:	02 00                	add    al,BYTE PTR [eax]
 41b:	00 e0                	add    al,ah
 41d:	3f                   	aas    
 41e:	00 00                	add    BYTE PTR [eax],al
 420:	07                   	pop    es
 421:	03 00                	add    eax,DWORD PTR [eax]
 423:	00 e4                	add    ah,ah
 425:	3f                   	aas    
 426:	00 00                	add    BYTE PTR [eax],al
 428:	07                   	pop    es
 429:	05 00 00 e8 3f       	add    eax,0x3fe80000
 42e:	00 00                	add    BYTE PTR [eax],al
 430:	07                   	pop    es
 431:	07                   	pop    es
	...

Disassembly of section .init:

00001000 <_init>:
    1000:	f3 0f 1e fb          	endbr32 
    1004:	53                   	push   ebx
    1005:	83 ec 08             	sub    esp,0x8
    1008:	e8 03 01 00 00       	call   1110 <__x86.get_pc_thunk.bx>
    100d:	81 c3 c3 2f 00 00    	add    ebx,0x2fc3
    1013:	8b 83 24 00 00 00    	mov    eax,DWORD PTR [ebx+0x24]
    1019:	85 c0                	test   eax,eax
    101b:	74 02                	je     101f <_init+0x1f>
    101d:	ff d0                	call   eax
    101f:	83 c4 08             	add    esp,0x8
    1022:	5b                   	pop    ebx
    1023:	c3                   	ret    

Disassembly of section .plt:

00001030 <.plt>:
    1030:	ff b3 04 00 00 00    	push   DWORD PTR [ebx+0x4]
    1036:	ff a3 08 00 00 00    	jmp    DWORD PTR [ebx+0x8]
    103c:	0f 1f 40 00          	nop    DWORD PTR [eax+0x0]
    1040:	f3 0f 1e fb          	endbr32 
    1044:	68 00 00 00 00       	push   0x0
    1049:	e9 e2 ff ff ff       	jmp    1030 <.plt>
    104e:	66 90                	xchg   ax,ax
    1050:	f3 0f 1e fb          	endbr32 
    1054:	68 08 00 00 00       	push   0x8
    1059:	e9 d2 ff ff ff       	jmp    1030 <.plt>
    105e:	66 90                	xchg   ax,ax
    1060:	f3 0f 1e fb          	endbr32 
    1064:	68 10 00 00 00       	push   0x10
    1069:	e9 c2 ff ff ff       	jmp    1030 <.plt>
    106e:	66 90                	xchg   ax,ax
    1070:	f3 0f 1e fb          	endbr32 
    1074:	68 18 00 00 00       	push   0x18
    1079:	e9 b2 ff ff ff       	jmp    1030 <.plt>
    107e:	66 90                	xchg   ax,ax

Disassembly of section .plt.got:

00001080 <__cxa_finalize@plt>:
    1080:	f3 0f 1e fb          	endbr32 
    1084:	ff a3 20 00 00 00    	jmp    DWORD PTR [ebx+0x20]
    108a:	66 0f 1f 44 00 00    	nop    WORD PTR [eax+eax*1+0x0]

Disassembly of section .plt.sec:

00001090 <printf@plt>:
    1090:	f3 0f 1e fb          	endbr32 
    1094:	ff a3 0c 00 00 00    	jmp    DWORD PTR [ebx+0xc]
    109a:	66 0f 1f 44 00 00    	nop    WORD PTR [eax+eax*1+0x0]

000010a0 <gets@plt>:
    10a0:	f3 0f 1e fb          	endbr32 
    10a4:	ff a3 10 00 00 00    	jmp    DWORD PTR [ebx+0x10]
    10aa:	66 0f 1f 44 00 00    	nop    WORD PTR [eax+eax*1+0x0]

000010b0 <puts@plt>:
    10b0:	f3 0f 1e fb          	endbr32 
    10b4:	ff a3 14 00 00 00    	jmp    DWORD PTR [ebx+0x14]
    10ba:	66 0f 1f 44 00 00    	nop    WORD PTR [eax+eax*1+0x0]

000010c0 <__libc_start_main@plt>:
    10c0:	f3 0f 1e fb          	endbr32 
    10c4:	ff a3 18 00 00 00    	jmp    DWORD PTR [ebx+0x18]
    10ca:	66 0f 1f 44 00 00    	nop    WORD PTR [eax+eax*1+0x0]

Disassembly of section .text:

000010d0 <_start>:
    10d0:	f3 0f 1e fb          	endbr32 
    10d4:	31 ed                	xor    ebp,ebp
    10d6:	5e                   	pop    esi
    10d7:	89 e1                	mov    ecx,esp
    10d9:	83 e4 f0             	and    esp,0xfffffff0
    10dc:	50                   	push   eax
    10dd:	54                   	push   esp
    10de:	52                   	push   edx
    10df:	e8 22 00 00 00       	call   1106 <_start+0x36>
    10e4:	81 c3 ec 2e 00 00    	add    ebx,0x2eec
    10ea:	8d 83 60 d3 ff ff    	lea    eax,[ebx-0x2ca0]
    10f0:	50                   	push   eax
    10f1:	8d 83 f0 d2 ff ff    	lea    eax,[ebx-0x2d10]
    10f7:	50                   	push   eax
    10f8:	51                   	push   ecx
    10f9:	56                   	push   esi
    10fa:	ff b3 28 00 00 00    	push   DWORD PTR [ebx+0x28]
    1100:	e8 bb ff ff ff       	call   10c0 <__libc_start_main@plt>
    1105:	f4                   	hlt    
    1106:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
    1109:	c3                   	ret    
    110a:	66 90                	xchg   ax,ax
    110c:	66 90                	xchg   ax,ax
    110e:	66 90                	xchg   ax,ax

00001110 <__x86.get_pc_thunk.bx>:
    1110:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
    1113:	c3                   	ret    
    1114:	66 90                	xchg   ax,ax
    1116:	66 90                	xchg   ax,ax
    1118:	66 90                	xchg   ax,ax
    111a:	66 90                	xchg   ax,ax
    111c:	66 90                	xchg   ax,ax
    111e:	66 90                	xchg   ax,ax

00001120 <deregister_tm_clones>:
    1120:	e8 e4 00 00 00       	call   1209 <__x86.get_pc_thunk.dx>
    1125:	81 c2 ab 2e 00 00    	add    edx,0x2eab
    112b:	8d 8a 38 00 00 00    	lea    ecx,[edx+0x38]
    1131:	8d 82 38 00 00 00    	lea    eax,[edx+0x38]
    1137:	39 c8                	cmp    eax,ecx
    1139:	74 1d                	je     1158 <deregister_tm_clones+0x38>
    113b:	8b 82 1c 00 00 00    	mov    eax,DWORD PTR [edx+0x1c]
    1141:	85 c0                	test   eax,eax
    1143:	74 13                	je     1158 <deregister_tm_clones+0x38>
    1145:	55                   	push   ebp
    1146:	89 e5                	mov    ebp,esp
    1148:	83 ec 14             	sub    esp,0x14
    114b:	51                   	push   ecx
    114c:	ff d0                	call   eax
    114e:	83 c4 10             	add    esp,0x10
    1151:	c9                   	leave  
    1152:	c3                   	ret    
    1153:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
    1157:	90                   	nop
    1158:	c3                   	ret    
    1159:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

00001160 <register_tm_clones>:
    1160:	e8 a4 00 00 00       	call   1209 <__x86.get_pc_thunk.dx>
    1165:	81 c2 6b 2e 00 00    	add    edx,0x2e6b
    116b:	55                   	push   ebp
    116c:	89 e5                	mov    ebp,esp
    116e:	53                   	push   ebx
    116f:	8d 8a 38 00 00 00    	lea    ecx,[edx+0x38]
    1175:	8d 82 38 00 00 00    	lea    eax,[edx+0x38]
    117b:	83 ec 04             	sub    esp,0x4
    117e:	29 c8                	sub    eax,ecx
    1180:	89 c3                	mov    ebx,eax
    1182:	c1 e8 1f             	shr    eax,0x1f
    1185:	c1 fb 02             	sar    ebx,0x2
    1188:	01 d8                	add    eax,ebx
    118a:	d1 f8                	sar    eax,1
    118c:	74 14                	je     11a2 <register_tm_clones+0x42>
    118e:	8b 92 2c 00 00 00    	mov    edx,DWORD PTR [edx+0x2c]
    1194:	85 d2                	test   edx,edx
    1196:	74 0a                	je     11a2 <register_tm_clones+0x42>
    1198:	83 ec 08             	sub    esp,0x8
    119b:	50                   	push   eax
    119c:	51                   	push   ecx
    119d:	ff d2                	call   edx
    119f:	83 c4 10             	add    esp,0x10
    11a2:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    11a5:	c9                   	leave  
    11a6:	c3                   	ret    
    11a7:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
    11ae:	66 90                	xchg   ax,ax

000011b0 <__do_global_dtors_aux>:
    11b0:	f3 0f 1e fb          	endbr32 
    11b4:	55                   	push   ebp
    11b5:	89 e5                	mov    ebp,esp
    11b7:	53                   	push   ebx
    11b8:	e8 53 ff ff ff       	call   1110 <__x86.get_pc_thunk.bx>
    11bd:	81 c3 13 2e 00 00    	add    ebx,0x2e13
    11c3:	83 ec 04             	sub    esp,0x4
    11c6:	80 bb 38 00 00 00 00 	cmp    BYTE PTR [ebx+0x38],0x0
    11cd:	75 27                	jne    11f6 <__do_global_dtors_aux+0x46>
    11cf:	8b 83 20 00 00 00    	mov    eax,DWORD PTR [ebx+0x20]
    11d5:	85 c0                	test   eax,eax
    11d7:	74 11                	je     11ea <__do_global_dtors_aux+0x3a>
    11d9:	83 ec 0c             	sub    esp,0xc
    11dc:	ff b3 34 00 00 00    	push   DWORD PTR [ebx+0x34]
    11e2:	e8 99 fe ff ff       	call   1080 <__cxa_finalize@plt>
    11e7:	83 c4 10             	add    esp,0x10
    11ea:	e8 31 ff ff ff       	call   1120 <deregister_tm_clones>
    11ef:	c6 83 38 00 00 00 01 	mov    BYTE PTR [ebx+0x38],0x1
    11f6:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    11f9:	c9                   	leave  
    11fa:	c3                   	ret    
    11fb:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]
    11ff:	90                   	nop

00001200 <frame_dummy>:
    1200:	f3 0f 1e fb          	endbr32 
    1204:	e9 57 ff ff ff       	jmp    1160 <register_tm_clones>

00001209 <__x86.get_pc_thunk.dx>:
    1209:	8b 14 24             	mov    edx,DWORD PTR [esp]
    120c:	c3                   	ret    

0000120d <print_name>:
    120d:	f3 0f 1e fb          	endbr32 
    1211:	55                   	push   ebp
    1212:	89 e5                	mov    ebp,esp
    1214:	53                   	push   ebx
    1215:	83 ec 14             	sub    esp,0x14
    1218:	e8 f3 fe ff ff       	call   1110 <__x86.get_pc_thunk.bx>
    121d:	81 c3 b3 2d 00 00    	add    ebx,0x2db3
    1223:	83 ec 08             	sub    esp,0x8
    1226:	8d 45 f0             	lea    eax,[ebp-0x10]
    1229:	50                   	push   eax
    122a:	8d 83 38 e0 ff ff    	lea    eax,[ebx-0x1fc8]
    1230:	50                   	push   eax
    1231:	e8 5a fe ff ff       	call   1090 <printf@plt>
    1236:	83 c4 10             	add    esp,0x10
    1239:	83 ec 0c             	sub    esp,0xc
    123c:	8d 83 49 e0 ff ff    	lea    eax,[ebx-0x1fb7]
    1242:	50                   	push   eax
    1243:	e8 68 fe ff ff       	call   10b0 <puts@plt>
    1248:	83 c4 10             	add    esp,0x10
    124b:	83 ec 0c             	sub    esp,0xc
    124e:	8d 45 f0             	lea    eax,[ebp-0x10]
    1251:	50                   	push   eax
    1252:	e8 49 fe ff ff       	call   10a0 <gets@plt>
    1257:	83 c4 10             	add    esp,0x10
    125a:	83 ec 08             	sub    esp,0x8
    125d:	8d 45 f0             	lea    eax,[ebp-0x10]
    1260:	50                   	push   eax
    1261:	8d 83 55 e0 ff ff    	lea    eax,[ebx-0x1fab]
    1267:	50                   	push   eax
    1268:	e8 23 fe ff ff       	call   1090 <printf@plt>
    126d:	83 c4 10             	add    esp,0x10
    1270:	90                   	nop
    1271:	8b 5d fc             	mov    ebx,DWORD PTR [ebp-0x4]
    1274:	c9                   	leave  
    1275:	c3                   	ret    

00001276 <main>:
    1276:	f3 0f 1e fb          	endbr32 
    127a:	8d 4c 24 04          	lea    ecx,[esp+0x4]
    127e:	83 e4 f0             	and    esp,0xfffffff0
    1281:	ff 71 fc             	push   DWORD PTR [ecx-0x4]
    1284:	55                   	push   ebp
    1285:	89 e5                	mov    ebp,esp
    1287:	53                   	push   ebx
    1288:	51                   	push   ecx
    1289:	e8 2d 00 00 00       	call   12bb <__x86.get_pc_thunk.ax>
    128e:	05 42 2d 00 00       	add    eax,0x2d42
    1293:	83 ec 0c             	sub    esp,0xc
    1296:	8d 90 5e e0 ff ff    	lea    edx,[eax-0x1fa2]
    129c:	52                   	push   edx
    129d:	89 c3                	mov    ebx,eax
    129f:	e8 0c fe ff ff       	call   10b0 <puts@plt>
    12a4:	83 c4 10             	add    esp,0x10
    12a7:	e8 61 ff ff ff       	call   120d <print_name>
    12ac:	b8 00 00 00 00       	mov    eax,0x0
    12b1:	8d 65 f8             	lea    esp,[ebp-0x8]
    12b4:	59                   	pop    ecx
    12b5:	5b                   	pop    ebx
    12b6:	5d                   	pop    ebp
    12b7:	8d 61 fc             	lea    esp,[ecx-0x4]
    12ba:	c3                   	ret    

000012bb <__x86.get_pc_thunk.ax>:
    12bb:	8b 04 24             	mov    eax,DWORD PTR [esp]
    12be:	c3                   	ret    
    12bf:	90                   	nop

000012c0 <__libc_csu_init>:
    12c0:	f3 0f 1e fb          	endbr32 
    12c4:	55                   	push   ebp
    12c5:	e8 6b 00 00 00       	call   1335 <__x86.get_pc_thunk.bp>
    12ca:	81 c5 06 2d 00 00    	add    ebp,0x2d06
    12d0:	57                   	push   edi
    12d1:	56                   	push   esi
    12d2:	53                   	push   ebx
    12d3:	83 ec 0c             	sub    esp,0xc
    12d6:	89 eb                	mov    ebx,ebp
    12d8:	8b 7c 24 28          	mov    edi,DWORD PTR [esp+0x28]
    12dc:	e8 1f fd ff ff       	call   1000 <_init>
    12e1:	8d 9d 04 ff ff ff    	lea    ebx,[ebp-0xfc]
    12e7:	8d 85 00 ff ff ff    	lea    eax,[ebp-0x100]
    12ed:	29 c3                	sub    ebx,eax
    12ef:	c1 fb 02             	sar    ebx,0x2
    12f2:	74 29                	je     131d <__libc_csu_init+0x5d>
    12f4:	31 f6                	xor    esi,esi
    12f6:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
    12fd:	8d 76 00             	lea    esi,[esi+0x0]
    1300:	83 ec 04             	sub    esp,0x4
    1303:	57                   	push   edi
    1304:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
    1308:	ff 74 24 2c          	push   DWORD PTR [esp+0x2c]
    130c:	ff 94 b5 00 ff ff ff 	call   DWORD PTR [ebp+esi*4-0x100]
    1313:	83 c6 01             	add    esi,0x1
    1316:	83 c4 10             	add    esp,0x10
    1319:	39 f3                	cmp    ebx,esi
    131b:	75 e3                	jne    1300 <__libc_csu_init+0x40>
    131d:	83 c4 0c             	add    esp,0xc
    1320:	5b                   	pop    ebx
    1321:	5e                   	pop    esi
    1322:	5f                   	pop    edi
    1323:	5d                   	pop    ebp
    1324:	c3                   	ret    
    1325:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]
    132c:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

00001330 <__libc_csu_fini>:
    1330:	f3 0f 1e fb          	endbr32 
    1334:	c3                   	ret    

00001335 <__x86.get_pc_thunk.bp>:
    1335:	8b 2c 24             	mov    ebp,DWORD PTR [esp]
    1338:	c3                   	ret    

Disassembly of section .fini:

0000133c <_fini>:
    133c:	f3 0f 1e fb          	endbr32 
    1340:	53                   	push   ebx
    1341:	83 ec 08             	sub    esp,0x8
    1344:	e8 c7 fd ff ff       	call   1110 <__x86.get_pc_thunk.bx>
    1349:	81 c3 87 2c 00 00    	add    ebx,0x2c87
    134f:	83 c4 08             	add    esp,0x8
    1352:	5b                   	pop    ebx
    1353:	c3                   	ret    

Disassembly of section .rodata:

00002000 <_fp_hw>:
    2000:	03 00                	add    eax,DWORD PTR [eax]
	...

00002004 <_IO_stdin_used>:
    2004:	01 00                	add    DWORD PTR [eax],eax
    2006:	02 00                	add    al,BYTE PTR [eax]
    2008:	53                   	push   ebx
    2009:	74 61                	je     206c <__GNU_EH_FRAME_HDR+0x24>
    200b:	63 6b 20             	arpl   WORD PTR [ebx+0x20],bp
    200e:	4c                   	dec    esp
    200f:	65 61                	gs popa 
    2011:	6b 20 3a             	imul   esp,DWORD PTR [eax],0x3a
    2014:	20 25 78 0a 00 0a    	and    BYTE PTR ds:0xa000a78,ah
    201a:	45                   	inc    ebp
    201b:	6e                   	outs   dx,BYTE PTR ds:[esi]
    201c:	74 65                	je     2083 <__GNU_EH_FRAME_HDR+0x3b>
    201e:	72 20                	jb     2040 <_IO_stdin_used+0x3c>
    2020:	6e                   	outs   dx,BYTE PTR ds:[esi]
    2021:	61                   	popa   
    2022:	6d                   	ins    DWORD PTR es:[edi],dx
    2023:	65 00 48 65          	add    BYTE PTR gs:[eax+0x65],cl
    2027:	6c                   	ins    BYTE PTR es:[edi],dx
    2028:	6c                   	ins    BYTE PTR es:[edi],dx
    2029:	6f                   	outs   dx,DWORD PTR ds:[esi]
    202a:	20 25 73 00 57 65    	and    BYTE PTR ds:0x65570073,ah
    2030:	6c                   	ins    BYTE PTR es:[edi],dx
    2031:	63 6f 6d             	arpl   WORD PTR [edi+0x6d],bp
    2034:	65 20 74 6f 20       	and    BYTE PTR gs:[edi+ebp*2+0x20],dh
    2039:	53                   	push   ebx
    203a:	68 65 6c 6c 20       	push   0x206c6c65
    203f:	45                   	inc    ebp
    2040:	78 70                	js     20b2 <__GNU_EH_FRAME_HDR+0x6a>
    2042:	6c                   	ins    BYTE PTR es:[edi],dx
    2043:	6f                   	outs   dx,DWORD PTR ds:[esi]
    2044:	69                   	.byte 0x69
    2045:	74 00                	je     2047 <_IO_stdin_used+0x43>

Disassembly of section .eh_frame_hdr:

00002048 <__GNU_EH_FRAME_HDR>:
    2048:	01 1b                	add    DWORD PTR [ebx],ebx
    204a:	03 3b                	add    edi,DWORD PTR [ebx]
    204c:	58                   	pop    eax
    204d:	00 00                	add    BYTE PTR [eax],al
    204f:	00 0a                	add    BYTE PTR [edx],cl
    2051:	00 00                	add    BYTE PTR [eax],al
    2053:	00 e8                	add    al,ch
    2055:	ef                   	out    dx,eax
    2056:	ff                   	(bad)  
    2057:	ff 88 00 00 00 38    	dec    DWORD PTR [eax+0x38000000]
    205d:	f0 ff                	lock (bad) 
    205f:	ff ac 00 00 00 48 f0 	jmp    FWORD PTR [eax+eax*1-0xfb80000]
    2066:	ff                   	(bad)  
    2067:	ff c0                	inc    eax
    2069:	00 00                	add    BYTE PTR [eax],al
    206b:	00 88 f0 ff ff 74    	add    BYTE PTR [eax+0x74fffff0],cl
    2071:	00 00                	add    BYTE PTR [eax],al
    2073:	00 c5                	add    ch,al
    2075:	f1                   	icebp  
    2076:	ff                   	(bad)  
    2077:	ff d4                	call   esp
    2079:	00 00                	add    BYTE PTR [eax],al
    207b:	00 2e                	add    BYTE PTR [esi],ch
    207d:	f2 ff                	repnz (bad) 
    207f:	ff                   	(bad)  
    2080:	f8                   	clc    
    2081:	00 00                	add    BYTE PTR [eax],al
    2083:	00 73 f2             	add    BYTE PTR [ebx-0xe],dh
    2086:	ff                   	(bad)  
    2087:	ff 2c 01             	jmp    FWORD PTR [ecx+eax*1]
    208a:	00 00                	add    BYTE PTR [eax],al
    208c:	78 f2                	js     2080 <__GNU_EH_FRAME_HDR+0x38>
    208e:	ff                   	(bad)  
    208f:	ff 40 01             	inc    DWORD PTR [eax+0x1]
    2092:	00 00                	add    BYTE PTR [eax],al
    2094:	e8 f2 ff ff 8c       	call   8d00208b <_end+0x8cffe07f>
    2099:	01 00                	add    DWORD PTR [eax],eax
    209b:	00 ed                	add    ch,ch
    209d:	f2 ff                	repnz (bad) 
    209f:	ff                   	.byte 0xff
    20a0:	a0                   	.byte 0xa0
    20a1:	01 00                	add    DWORD PTR [eax],eax
	...

Disassembly of section .eh_frame:

000020a4 <__FRAME_END__-0x158>:
    20a4:	14 00                	adc    al,0x0
    20a6:	00 00                	add    BYTE PTR [eax],al
    20a8:	00 00                	add    BYTE PTR [eax],al
    20aa:	00 00                	add    BYTE PTR [eax],al
    20ac:	01 7a 52             	add    DWORD PTR [edx+0x52],edi
    20af:	00 01                	add    BYTE PTR [ecx],al
    20b1:	7c 08                	jl     20bb <__GNU_EH_FRAME_HDR+0x73>
    20b3:	01 1b                	add    DWORD PTR [ebx],ebx
    20b5:	0c 04                	or     al,0x4
    20b7:	04 88                	add    al,0x88
    20b9:	01 00                	add    DWORD PTR [eax],eax
    20bb:	00 10                	add    BYTE PTR [eax],dl
    20bd:	00 00                	add    BYTE PTR [eax],al
    20bf:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
    20c2:	00 00                	add    BYTE PTR [eax],al
    20c4:	0c f0                	or     al,0xf0
    20c6:	ff                   	(bad)  
    20c7:	ff                   	(bad)  
    20c8:	3a 00                	cmp    al,BYTE PTR [eax]
    20ca:	00 00                	add    BYTE PTR [eax],al
    20cc:	00 44 07 08          	add    BYTE PTR [edi+eax*1+0x8],al
    20d0:	20 00                	and    BYTE PTR [eax],al
    20d2:	00 00                	add    BYTE PTR [eax],al
    20d4:	30 00                	xor    BYTE PTR [eax],al
    20d6:	00 00                	add    BYTE PTR [eax],al
    20d8:	58                   	pop    eax
    20d9:	ef                   	out    dx,eax
    20da:	ff                   	(bad)  
    20db:	ff 50 00             	call   DWORD PTR [eax+0x0]
    20de:	00 00                	add    BYTE PTR [eax],al
    20e0:	00 0e                	add    BYTE PTR [esi],cl
    20e2:	08 46 0e             	or     BYTE PTR [esi+0xe],al
    20e5:	0c 4a                	or     al,0x4a
    20e7:	0f 0b                	ud2    
    20e9:	74 04                	je     20ef <__GNU_EH_FRAME_HDR+0xa7>
    20eb:	78 00                	js     20ed <__GNU_EH_FRAME_HDR+0xa5>
    20ed:	3f                   	aas    
    20ee:	1a 39                	sbb    bh,BYTE PTR [ecx]
    20f0:	2a 32                	sub    dh,BYTE PTR [edx]
    20f2:	24 22                	and    al,0x22
    20f4:	10 00                	adc    BYTE PTR [eax],al
    20f6:	00 00                	add    BYTE PTR [eax],al
    20f8:	54                   	push   esp
    20f9:	00 00                	add    BYTE PTR [eax],al
    20fb:	00 84 ef ff ff 10 00 	add    BYTE PTR [edi+ebp*8+0x10ffff],al
    2102:	00 00                	add    BYTE PTR [eax],al
    2104:	00 00                	add    BYTE PTR [eax],al
    2106:	00 00                	add    BYTE PTR [eax],al
    2108:	10 00                	adc    BYTE PTR [eax],al
    210a:	00 00                	add    BYTE PTR [eax],al
    210c:	68 00 00 00 80       	push   0x80000000
    2111:	ef                   	out    dx,eax
    2112:	ff                   	(bad)  
    2113:	ff 40 00             	inc    DWORD PTR [eax+0x0]
    2116:	00 00                	add    BYTE PTR [eax],al
    2118:	00 00                	add    BYTE PTR [eax],al
    211a:	00 00                	add    BYTE PTR [eax],al
    211c:	20 00                	and    BYTE PTR [eax],al
    211e:	00 00                	add    BYTE PTR [eax],al
    2120:	7c 00                	jl     2122 <__GNU_EH_FRAME_HDR+0xda>
    2122:	00 00                	add    BYTE PTR [eax],al
    2124:	e9 f0 ff ff 69       	jmp    6a002119 <_end+0x69ffe10d>
    2129:	00 00                	add    BYTE PTR [eax],al
    212b:	00 00                	add    BYTE PTR [eax],al
    212d:	45                   	inc    ebp
    212e:	0e                   	push   cs
    212f:	08 85 02 42 0d 05    	or     BYTE PTR [ebp+0x50d4202],al
    2135:	44                   	inc    esp
    2136:	83 03 02             	add    DWORD PTR [ebx],0x2
    2139:	5d                   	pop    ebp
    213a:	c5 c3 0c             	(bad)
    213d:	04 04                	add    al,0x4
    213f:	00 30                	add    BYTE PTR [eax],dh
    2141:	00 00                	add    BYTE PTR [eax],al
    2143:	00 a0 00 00 00 2e    	add    BYTE PTR [eax+0x2e000000],ah
    2149:	f1                   	icebp  
    214a:	ff                   	(bad)  
    214b:	ff 45 00             	inc    DWORD PTR [ebp+0x0]
    214e:	00 00                	add    BYTE PTR [eax],al
    2150:	00 48 0c             	add    BYTE PTR [eax+0xc],cl
    2153:	01 00                	add    DWORD PTR [eax],eax
    2155:	47                   	inc    edi
    2156:	10 05 02 75 00 44    	adc    BYTE PTR ds:0x44007502,al
    215c:	0f 03 75 78          	lsl    esi,WORD PTR [ebp+0x78]
    2160:	06                   	push   es
    2161:	10 03                	adc    BYTE PTR [ebx],al
    2163:	02 75 7c             	add    dh,BYTE PTR [ebp+0x7c]
    2166:	6c                   	ins    BYTE PTR es:[edi],dx
    2167:	c1 0c 01 00          	ror    DWORD PTR [ecx+eax*1],0x0
    216b:	41                   	inc    ecx
    216c:	c3                   	ret    
    216d:	41                   	inc    ecx
    216e:	c5 43 0c             	lds    eax,FWORD PTR [ebx+0xc]
    2171:	04 04                	add    al,0x4
    2173:	00 10                	add    BYTE PTR [eax],dl
    2175:	00 00                	add    BYTE PTR [eax],al
    2177:	00 d4                	add    ah,dl
    2179:	00 00                	add    BYTE PTR [eax],al
    217b:	00 3f                	add    BYTE PTR [edi],bh
    217d:	f1                   	icebp  
    217e:	ff                   	(bad)  
    217f:	ff 04 00             	inc    DWORD PTR [eax+eax*1]
    2182:	00 00                	add    BYTE PTR [eax],al
    2184:	00 00                	add    BYTE PTR [eax],al
    2186:	00 00                	add    BYTE PTR [eax],al
    2188:	48                   	dec    eax
    2189:	00 00                	add    BYTE PTR [eax],al
    218b:	00 e8                	add    al,ch
    218d:	00 00                	add    BYTE PTR [eax],al
    218f:	00 30                	add    BYTE PTR [eax],dh
    2191:	f1                   	icebp  
    2192:	ff                   	(bad)  
    2193:	ff 65 00             	jmp    DWORD PTR [ebp+0x0]
    2196:	00 00                	add    BYTE PTR [eax],al
    2198:	00 45 0e             	add    BYTE PTR [ebp+0xe],al
    219b:	08 85 02 4c 0e 0c    	or     BYTE PTR [ebp+0xc0e4c02],al
    21a1:	87 03                	xchg   DWORD PTR [ebx],eax
    21a3:	41                   	inc    ecx
    21a4:	0e                   	push   cs
    21a5:	10 86 04 41 0e 14    	adc    BYTE PTR [esi+0x140e4104],al
    21ab:	83 05 43 0e 20 6d 0e 	add    DWORD PTR ds:0x6d200e43,0xe
    21b2:	24 41                	and    al,0x41
    21b4:	0e                   	push   cs
    21b5:	28 44 0e 2c          	sub    BYTE PTR [esi+ecx*1+0x2c],al
    21b9:	44                   	inc    esp
    21ba:	0e                   	push   cs
    21bb:	30 4d 0e             	xor    BYTE PTR [ebp+0xe],cl
    21be:	20 47 0e             	and    BYTE PTR [edi+0xe],al
    21c1:	14 41                	adc    al,0x41
    21c3:	c3                   	ret    
    21c4:	0e                   	push   cs
    21c5:	10 41 c6             	adc    BYTE PTR [ecx-0x3a],al
    21c8:	0e                   	push   cs
    21c9:	0c 41                	or     al,0x41
    21cb:	c7                   	(bad)  
    21cc:	0e                   	push   cs
    21cd:	08 41 c5             	or     BYTE PTR [ecx-0x3b],al
    21d0:	0e                   	push   cs
    21d1:	04 00                	add    al,0x0
    21d3:	00 10                	add    BYTE PTR [eax],dl
    21d5:	00 00                	add    BYTE PTR [eax],al
    21d7:	00 34 01             	add    BYTE PTR [ecx+eax*1],dh
    21da:	00 00                	add    BYTE PTR [eax],al
    21dc:	54                   	push   esp
    21dd:	f1                   	icebp  
    21de:	ff                   	(bad)  
    21df:	ff 05 00 00 00 00    	inc    DWORD PTR ds:0x0
    21e5:	00 00                	add    BYTE PTR [eax],al
    21e7:	00 10                	add    BYTE PTR [eax],dl
    21e9:	00 00                	add    BYTE PTR [eax],al
    21eb:	00 48 01             	add    BYTE PTR [eax+0x1],cl
    21ee:	00 00                	add    BYTE PTR [eax],al
    21f0:	45                   	inc    ebp
    21f1:	f1                   	icebp  
    21f2:	ff                   	(bad)  
    21f3:	ff 04 00             	inc    DWORD PTR [eax+eax*1]
    21f6:	00 00                	add    BYTE PTR [eax],al
    21f8:	00 00                	add    BYTE PTR [eax],al
	...

000021fc <__FRAME_END__>:
    21fc:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .init_array:

00003ed0 <__frame_dummy_init_array_entry>:
    3ed0:	00 12                	add    BYTE PTR [edx],dl
	...

Disassembly of section .fini_array:

00003ed4 <__do_global_dtors_aux_fini_array_entry>:
    3ed4:	b0 11                	mov    al,0x11
	...

Disassembly of section .dynamic:

00003ed8 <_DYNAMIC>:
    3ed8:	01 00                	add    DWORD PTR [eax],eax
    3eda:	00 00                	add    BYTE PTR [eax],al
    3edc:	01 00                	add    DWORD PTR [eax],eax
    3ede:	00 00                	add    BYTE PTR [eax],al
    3ee0:	0c 00                	or     al,0x0
    3ee2:	00 00                	add    BYTE PTR [eax],al
    3ee4:	00 10                	add    BYTE PTR [eax],dl
    3ee6:	00 00                	add    BYTE PTR [eax],al
    3ee8:	0d 00 00 00 3c       	or     eax,0x3c000000
    3eed:	13 00                	adc    eax,DWORD PTR [eax]
    3eef:	00 19                	add    BYTE PTR [ecx],bl
    3ef1:	00 00                	add    BYTE PTR [eax],al
    3ef3:	00 d0                	add    al,dl
    3ef5:	3e 00 00             	add    BYTE PTR ds:[eax],al
    3ef8:	1b 00                	sbb    eax,DWORD PTR [eax]
    3efa:	00 00                	add    BYTE PTR [eax],al
    3efc:	04 00                	add    al,0x0
    3efe:	00 00                	add    BYTE PTR [eax],al
    3f00:	1a 00                	sbb    al,BYTE PTR [eax]
    3f02:	00 00                	add    BYTE PTR [eax],al
    3f04:	d4 3e                	aam    0x3e
    3f06:	00 00                	add    BYTE PTR [eax],al
    3f08:	1c 00                	sbb    al,0x0
    3f0a:	00 00                	add    BYTE PTR [eax],al
    3f0c:	04 00                	add    al,0x0
    3f0e:	00 00                	add    BYTE PTR [eax],al
    3f10:	f5                   	cmc    
    3f11:	fe                   	(bad)  
    3f12:	ff 6f 28             	jmp    FWORD PTR [edi+0x28]
    3f15:	02 00                	add    al,BYTE PTR [eax]
    3f17:	00 05 00 00 00 e8    	add    BYTE PTR ds:0xe8000000,al
    3f1d:	02 00                	add    al,BYTE PTR [eax]
    3f1f:	00 06                	add    BYTE PTR [esi],al
    3f21:	00 00                	add    BYTE PTR [eax],al
    3f23:	00 48 02             	add    BYTE PTR [eax+0x2],cl
    3f26:	00 00                	add    BYTE PTR [eax],al
    3f28:	0a 00                	or     al,BYTE PTR [eax]
    3f2a:	00 00                	add    BYTE PTR [eax],al
    3f2c:	a7                   	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
    3f2d:	00 00                	add    BYTE PTR [eax],al
    3f2f:	00 0b                	add    BYTE PTR [ebx],cl
    3f31:	00 00                	add    BYTE PTR [eax],al
    3f33:	00 10                	add    BYTE PTR [eax],dl
    3f35:	00 00                	add    BYTE PTR [eax],al
    3f37:	00 15 00 00 00 00    	add    BYTE PTR ds:0x0,dl
    3f3d:	00 00                	add    BYTE PTR [eax],al
    3f3f:	00 03                	add    BYTE PTR [ebx],al
    3f41:	00 00                	add    BYTE PTR [eax],al
    3f43:	00 d0                	add    al,dl
    3f45:	3f                   	aas    
    3f46:	00 00                	add    BYTE PTR [eax],al
    3f48:	02 00                	add    al,BYTE PTR [eax]
    3f4a:	00 00                	add    BYTE PTR [eax],al
    3f4c:	20 00                	and    BYTE PTR [eax],al
    3f4e:	00 00                	add    BYTE PTR [eax],al
    3f50:	14 00                	adc    al,0x0
    3f52:	00 00                	add    BYTE PTR [eax],al
    3f54:	11 00                	adc    DWORD PTR [eax],eax
    3f56:	00 00                	add    BYTE PTR [eax],al
    3f58:	17                   	pop    ss
    3f59:	00 00                	add    BYTE PTR [eax],al
    3f5b:	00 14 04             	add    BYTE PTR [esp+eax*1],dl
    3f5e:	00 00                	add    BYTE PTR [eax],al
    3f60:	11 00                	adc    DWORD PTR [eax],eax
    3f62:	00 00                	add    BYTE PTR [eax],al
    3f64:	d4 03                	aam    0x3
    3f66:	00 00                	add    BYTE PTR [eax],al
    3f68:	12 00                	adc    al,BYTE PTR [eax]
    3f6a:	00 00                	add    BYTE PTR [eax],al
    3f6c:	40                   	inc    eax
    3f6d:	00 00                	add    BYTE PTR [eax],al
    3f6f:	00 13                	add    BYTE PTR [ebx],dl
    3f71:	00 00                	add    BYTE PTR [eax],al
    3f73:	00 08                	add    BYTE PTR [eax],cl
    3f75:	00 00                	add    BYTE PTR [eax],al
    3f77:	00 1e                	add    BYTE PTR [esi],bl
    3f79:	00 00                	add    BYTE PTR [eax],al
    3f7b:	00 08                	add    BYTE PTR [eax],cl
    3f7d:	00 00                	add    BYTE PTR [eax],al
    3f7f:	00 fb                	add    bl,bh
    3f81:	ff                   	(bad)  
    3f82:	ff 6f 01             	jmp    FWORD PTR [edi+0x1]
    3f85:	00 00                	add    BYTE PTR [eax],al
    3f87:	08 fe                	or     dh,bh
    3f89:	ff                   	(bad)  
    3f8a:	ff 6f a4             	jmp    FWORD PTR [edi-0x5c]
    3f8d:	03 00                	add    eax,DWORD PTR [eax]
    3f8f:	00 ff                	add    bh,bh
    3f91:	ff                   	(bad)  
    3f92:	ff 6f 01             	jmp    FWORD PTR [edi+0x1]
    3f95:	00 00                	add    BYTE PTR [eax],al
    3f97:	00 f0                	add    al,dh
    3f99:	ff                   	(bad)  
    3f9a:	ff 6f 90             	jmp    FWORD PTR [edi-0x70]
    3f9d:	03 00                	add    eax,DWORD PTR [eax]
    3f9f:	00 fa                	add    dl,bh
    3fa1:	ff                   	(bad)  
    3fa2:	ff 6f 04             	jmp    FWORD PTR [edi+0x4]
	...

Disassembly of section .got:

00003fd0 <_GLOBAL_OFFSET_TABLE_>:
    3fd0:	d8 3e                	fdivr  DWORD PTR [esi]
	...
    3fda:	00 00                	add    BYTE PTR [eax],al
    3fdc:	40                   	inc    eax
    3fdd:	10 00                	adc    BYTE PTR [eax],al
    3fdf:	00 50 10             	add    BYTE PTR [eax+0x10],dl
    3fe2:	00 00                	add    BYTE PTR [eax],al
    3fe4:	60                   	pusha  
    3fe5:	10 00                	adc    BYTE PTR [eax],al
    3fe7:	00 70 10             	add    BYTE PTR [eax+0x10],dh
	...
    3ff6:	00 00                	add    BYTE PTR [eax],al
    3ff8:	76 12                	jbe    400c <_end>
    3ffa:	00 00                	add    BYTE PTR [eax],al
    3ffc:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .data:

00004000 <__data_start>:
    4000:	00 00                	add    BYTE PTR [eax],al
	...

00004004 <__dso_handle>:
    4004:	04 40                	add    al,0x40
	...

Disassembly of section .bss:

00004008 <completed.7622>:
    4008:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    edi
   1:	43                   	inc    ebx
   2:	43                   	inc    ebx
   3:	3a 20                	cmp    ah,BYTE PTR [eax]
   5:	28 55 62             	sub    BYTE PTR [ebp+0x62],dl
   8:	75 6e                	jne    78 <_init-0xf88>
   a:	74 75                	je     81 <_init-0xf7f>
   c:	20 39                	and    BYTE PTR [ecx],bh
   e:	2e 33 2e             	xor    ebp,DWORD PTR cs:[esi]
  11:	30 2d 31 37 75 62    	xor    BYTE PTR ds:0x62753731,ch
  17:	75 6e                	jne    87 <_init-0xf79>
  19:	74 75                	je     90 <_init-0xf70>
  1b:	31 7e 32             	xor    DWORD PTR [esi+0x32],edi
  1e:	30 2e                	xor    BYTE PTR [esi],ch
  20:	30 34 29             	xor    BYTE PTR [ecx+ebp*1],dh
  23:	20 39                	and    BYTE PTR [ecx],bh
  25:	2e 33 2e             	xor    ebp,DWORD PTR cs:[esi]
  28:	30 00                	xor    BYTE PTR [eax],al

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	1c 00                	sbb    al,0x0
   2:	00 00                	add    BYTE PTR [eax],al
   4:	02 00                	add    al,BYTE PTR [eax]
   6:	00 00                	add    BYTE PTR [eax],al
   8:	00 00                	add    BYTE PTR [eax],al
   a:	04 00                	add    al,0x0
   c:	00 00                	add    BYTE PTR [eax],al
   e:	00 00                	add    BYTE PTR [eax],al
  10:	0d 12 00 00 ae       	or     eax,0xae000012
	...

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	4b                   	dec    ebx
   1:	03 00                	add    eax,DWORD PTR [eax]
   3:	00 04 00             	add    BYTE PTR [eax+eax*1],al
   6:	00 00                	add    BYTE PTR [eax],al
   8:	00 00                	add    BYTE PTR [eax],al
   a:	04 01                	add    al,0x1
   c:	7e 01                	jle    f <_init-0xff1>
   e:	00 00                	add    BYTE PTR [eax],al
  10:	0c 52                	or     al,0x52
  12:	02 00                	add    al,BYTE PTR [eax]
  14:	00 81 00 00 00 0d    	add    BYTE PTR [ecx+0xd000000],al
  1a:	12 00                	adc    al,BYTE PTR [eax]
  1c:	00 ae 00 00 00 00    	add    BYTE PTR [esi+0x0],ch
  22:	00 00                	add    BYTE PTR [eax],al
  24:	00 02                	add    BYTE PTR [edx],al
  26:	17                   	pop    ss
  27:	00 00                	add    BYTE PTR [eax],al
  29:	00 02                	add    BYTE PTR [edx],al
  2b:	d1 17                	rcl    DWORD PTR [edi],1
  2d:	31 00                	xor    DWORD PTR [eax],eax
  2f:	00 00                	add    BYTE PTR [eax],al
  31:	03 04 07             	add    eax,DWORD PTR [edi+eax*1]
  34:	50                   	push   eax
  35:	01 00                	add    DWORD PTR [eax],eax
  37:	00 03                	add    BYTE PTR [ebx],al
  39:	01 06                	add    DWORD PTR [esi],eax
  3b:	ab                   	stos   DWORD PTR es:[edi],eax
  3c:	00 00                	add    BYTE PTR [eax],al
  3e:	00 04 38             	add    BYTE PTR [eax+edi*1],al
  41:	00 00                	add    BYTE PTR [eax],al
  43:	00 03                	add    BYTE PTR [ebx],al
  45:	01 08                	add    DWORD PTR [eax],ecx
  47:	a2 00 00 00 03       	mov    ds:0x3000000,al
  4c:	02 07                	add    al,BYTE PTR [edi]
  4e:	b9 00 00 00 03       	mov    ecx,0x3000000
  53:	04 07                	add    al,0x7
  55:	4b                   	dec    ebx
  56:	01 00                	add    DWORD PTR [eax],eax
  58:	00 03                	add    BYTE PTR [ebx],al
  5a:	01 06                	add    DWORD PTR [esi],eax
  5c:	a4                   	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  5d:	00 00                	add    BYTE PTR [eax],al
  5f:	00 03                	add    BYTE PTR [ebx],al
  61:	02 05 70 02 00 00    	add    al,BYTE PTR ds:0x270
  67:	05 04 05 69 6e       	add    eax,0x6e690504
  6c:	74 00                	je     6e <_init-0xf92>
  6e:	02 f3                	add    dh,bl
  70:	00 00                	add    BYTE PTR [eax],al
  72:	00 03                	add    BYTE PTR [ebx],al
  74:	2f                   	das    
  75:	2c 7a                	sub    al,0x7a
  77:	00 00                	add    BYTE PTR [eax],al
  79:	00 03                	add    BYTE PTR [ebx],al
  7b:	08 05 3d 02 00 00    	or     BYTE PTR ds:0x23d,al
  81:	03 08                	add    ecx,DWORD PTR [eax]
  83:	07                   	pop    es
  84:	46                   	inc    esi
  85:	01 00                	add    DWORD PTR [eax],eax
  87:	00 02                	add    BYTE PTR [edx],al
  89:	9f                   	lahf   
  8a:	02 00                	add    al,BYTE PTR [eax]
  8c:	00 03                	add    BYTE PTR [ebx],al
  8e:	98                   	cwde   
  8f:	19 94 00 00 00 03 04 	sbb    DWORD PTR [eax+eax*1+0x4030000],edx
  96:	05 42 02 00 00       	add    eax,0x242
  9b:	02 00                	add    al,BYTE PTR [eax]
  9d:	00 00                	add    BYTE PTR [eax],al
  9f:	00 03                	add    BYTE PTR [ebx],al
  a1:	99                   	cdq    
  a2:	1b 6e 00             	sbb    ebp,DWORD PTR [esi+0x0]
  a5:	00 00                	add    BYTE PTR [eax],al
  a7:	06                   	push   es
  a8:	04 07                	add    al,0x7
  aa:	04 38                	add    al,0x38
  ac:	00 00                	add    BYTE PTR [eax],al
  ae:	00 08                	add    BYTE PTR [eax],cl
  b0:	78 00                	js     b2 <_init-0xf4e>
  b2:	00 00                	add    BYTE PTR [eax],al
  b4:	94                   	xchg   esp,eax
  b5:	04 31                	add    al,0x31
  b7:	08 36                	or     BYTE PTR [esi],dh
  b9:	02 00                	add    al,BYTE PTR [eax]
  bb:	00 09                	add    BYTE PTR [ecx],cl
  bd:	8a 02                	mov    al,BYTE PTR [edx]
  bf:	00 00                	add    BYTE PTR [eax],al
  c1:	04 33                	add    al,0x33
  c3:	07                   	pop    es
  c4:	67 00 00             	add    BYTE PTR [bx+si],al
  c7:	00 00                	add    BYTE PTR [eax],al
  c9:	09 4b 00             	or     DWORD PTR [ebx+0x0],ecx
  cc:	00 00                	add    BYTE PTR [eax],al
  ce:	04 36                	add    al,0x36
  d0:	09 a9 00 00 00 04    	or     DWORD PTR [ecx+0x4000000],ebp
  d6:	09 0a                	or     DWORD PTR [edx],ecx
  d8:	00 00                	add    BYTE PTR [eax],al
  da:	00 04 37             	add    BYTE PTR [edi+esi*1],al
  dd:	09 a9 00 00 00 08    	or     DWORD PTR [ecx+0x8000000],ebp
  e3:	09 a7 02 00 00 04    	or     DWORD PTR [edi+0x4000002],esp
  e9:	38 09                	cmp    BYTE PTR [ecx],cl
  eb:	a9 00 00 00 0c       	test   eax,0xc000000
  f0:	09 30                	or     DWORD PTR [eax],esi
  f2:	00 00                	add    BYTE PTR [eax],al
  f4:	00 04 39             	add    BYTE PTR [ecx+edi*1],al
  f7:	09 a9 00 00 00 10    	or     DWORD PTR [ecx+0x10000000],ebp
  fd:	09 91 02 00 00 04    	or     DWORD PTR [ecx+0x4000002],edx
 103:	3a 09                	cmp    cl,BYTE PTR [ecx]
 105:	a9 00 00 00 14       	test   eax,0x14000000
 10a:	09 62 02             	or     DWORD PTR [edx+0x2],esp
 10d:	00 00                	add    BYTE PTR [eax],al
 10f:	04 3b                	add    al,0x3b
 111:	09 a9 00 00 00 18    	or     DWORD PTR [ecx+0x18000000],ebp
 117:	09 71 01             	or     DWORD PTR [ecx+0x1],esi
 11a:	00 00                	add    BYTE PTR [eax],al
 11c:	04 3c                	add    al,0x3c
 11e:	09 a9 00 00 00 1c    	or     DWORD PTR [ecx+0x1c000000],ebp
 124:	09 3f                	or     DWORD PTR [edi],edi
 126:	00 00                	add    BYTE PTR [eax],al
 128:	00 04 3d 09 a9 00 00 	add    BYTE PTR [edi*1+0xa909],al
 12f:	00 20                	add    BYTE PTR [eax],ah
 131:	09 94 00 00 00 04 40 	or     DWORD PTR [eax+eax*1+0x40040000],edx
 138:	09 a9 00 00 00 24    	or     DWORD PTR [ecx+0x24000000],ebp
 13e:	09 7a 02             	or     DWORD PTR [edx+0x2],edi
 141:	00 00                	add    BYTE PTR [eax],al
 143:	04 41                	add    al,0x41
 145:	09 a9 00 00 00 28    	or     DWORD PTR [ecx+0x28000000],ebp
 14b:	09 d2                	or     edx,edx
 14d:	00 00                	add    BYTE PTR [eax],al
 14f:	00 04 42             	add    BYTE PTR [edx+eax*2],al
 152:	09 a9 00 00 00 2c    	or     DWORD PTR [ecx+0x2c000000],ebp
 158:	09 ea                	or     edx,ebp
 15a:	00 00                	add    BYTE PTR [eax],al
 15c:	00 04 44             	add    BYTE PTR [esp+eax*2],al
 15f:	16                   	push   ss
 160:	4f                   	dec    edi
 161:	02 00                	add    al,BYTE PTR [eax]
 163:	00 30                	add    BYTE PTR [eax],dh
 165:	09 71 00             	or     DWORD PTR [ecx+0x0],esi
 168:	00 00                	add    BYTE PTR [eax],al
 16a:	04 46                	add    al,0x46
 16c:	14 55                	adc    al,0x55
 16e:	02 00                	add    al,BYTE PTR [eax]
 170:	00 34 09             	add    BYTE PTR [ecx+ecx*1],dh
 173:	69 01 00 00 04 48    	imul   eax,DWORD PTR [ecx],0x48040000
 179:	07                   	pop    es
 17a:	67 00 00             	add    BYTE PTR [bx+si],al
 17d:	00 38                	add    BYTE PTR [eax],bh
 17f:	09 07                	or     DWORD PTR [edi],eax
 181:	01 00                	add    DWORD PTR [eax],eax
 183:	00 04 49             	add    BYTE PTR [ecx+ecx*2],al
 186:	07                   	pop    es
 187:	67 00 00             	add    BYTE PTR [bx+si],al
 18a:	00 3c 09             	add    BYTE PTR [ecx+ecx*1],bh
 18d:	0f 01 00             	sgdtd  [eax]
 190:	00 04 4a             	add    BYTE PTR [edx+ecx*2],al
 193:	0b 88 00 00 00 40    	or     ecx,DWORD PTR [eax+0x40000000]
 199:	09 3a                	or     DWORD PTR [edx],edi
 19b:	01 00                	add    DWORD PTR [eax],eax
 19d:	00 04 4d 12 4b 00 00 	add    BYTE PTR [ecx*2+0x4b12],al
 1a4:	00 44 09 0a          	add    BYTE PTR [ecx+ecx*1+0xa],al
 1a8:	02 00                	add    al,BYTE PTR [eax]
 1aa:	00 04 4e             	add    BYTE PTR [esi+ecx*2],al
 1ad:	0f 59 00             	mulps  xmm0,XMMWORD PTR [eax]
 1b0:	00 00                	add    BYTE PTR [eax],al
 1b2:	46                   	inc    esi
 1b3:	09 b5 02 00 00 04    	or     DWORD PTR [ebp+0x4000002],esi
 1b9:	4f                   	dec    edi
 1ba:	08 5b 02             	or     BYTE PTR [ebx+0x2],bl
 1bd:	00 00                	add    BYTE PTR [eax],al
 1bf:	47                   	inc    edi
 1c0:	09 1b                	or     DWORD PTR [ebx],ebx
 1c2:	01 00                	add    DWORD PTR [eax],eax
 1c4:	00 04 51             	add    BYTE PTR [ecx+edx*2],al
 1c7:	0f 6b 02             	packssdw mm0,QWORD PTR [edx]
 1ca:	00 00                	add    BYTE PTR [eax],al
 1cc:	48                   	dec    eax
 1cd:	09 13                	or     DWORD PTR [ebx],edx
 1cf:	01 00                	add    DWORD PTR [eax],eax
 1d1:	00 04 59             	add    BYTE PTR [ecx+ebx*2],al
 1d4:	0d 9b 00 00 00       	or     eax,0x9b
 1d9:	4c                   	dec    esp
 1da:	09 60 01             	or     DWORD PTR [eax+0x1],esp
 1dd:	00 00                	add    BYTE PTR [eax],al
 1df:	04 5b                	add    al,0x5b
 1e1:	17                   	pop    ss
 1e2:	76 02                	jbe    1e6 <_init-0xe1a>
 1e4:	00 00                	add    BYTE PTR [eax],al
 1e6:	54                   	push   esp
 1e7:	09 24 01             	or     DWORD PTR [ecx+eax*1],esp
 1ea:	00 00                	add    BYTE PTR [eax],al
 1ec:	04 5c                	add    al,0x5c
 1ee:	19 81 02 00 00 58    	sbb    DWORD PTR [ecx+0x58000002],eax
 1f4:	09 19                	or     DWORD PTR [ecx],ebx
 1f6:	02 00                	add    al,BYTE PTR [eax]
 1f8:	00 04 5d 14 55 02 00 	add    BYTE PTR [ebx*2+0x25514],al
 1ff:	00 5c 09 27          	add    BYTE PTR [ecx+ecx*1+0x27],bl
 203:	02 00                	add    al,BYTE PTR [eax]
 205:	00 04 5e             	add    BYTE PTR [esi+ebx*2],al
 208:	09 a7 00 00 00 60    	or     DWORD PTR [edi+0x60000000],esp
 20e:	09 58 00             	or     DWORD PTR [eax+0x0],ebx
 211:	00 00                	add    BYTE PTR [eax],al
 213:	04 5f                	add    al,0x5f
 215:	0a 25 00 00 00 64    	or     ah,BYTE PTR ds:0x64000000
 21b:	09 5f 00             	or     DWORD PTR [edi+0x0],ebx
 21e:	00 00                	add    BYTE PTR [eax],al
 220:	04 60                	add    al,0x60
 222:	07                   	pop    es
 223:	67 00 00             	add    BYTE PTR [bx+si],al
 226:	00 68 09             	add    BYTE PTR [eax+0x9],ch
 229:	34 02                	xor    al,0x2
 22b:	00 00                	add    BYTE PTR [eax],al
 22d:	04 62                	add    al,0x62
 22f:	08 87 02 00 00 6c    	or     BYTE PTR [edi+0x6c000002],al
 235:	00 02                	add    BYTE PTR [edx],al
 237:	7c 00                	jl     239 <_init-0xdc7>
 239:	00 00                	add    BYTE PTR [eax],al
 23b:	05 07 19 af 00       	add    eax,0xaf1907
 240:	00 00                	add    BYTE PTR [eax],al
 242:	0a df                	or     bl,bh
 244:	00 00                	add    BYTE PTR [eax],al
 246:	00 04 2b             	add    BYTE PTR [ebx+ebp*1],al
 249:	0e                   	push   cs
 24a:	0b 2f                	or     ebp,DWORD PTR [edi]
 24c:	01 00                	add    DWORD PTR [eax],eax
 24e:	00 07                	add    BYTE PTR [edi],al
 250:	04 4a                	add    al,0x4a
 252:	02 00                	add    al,BYTE PTR [eax]
 254:	00 07                	add    BYTE PTR [edi],al
 256:	04 af                	add    al,0xaf
 258:	00 00                	add    BYTE PTR [eax],al
 25a:	00 0c 38             	add    BYTE PTR [eax+edi*1],cl
 25d:	00 00                	add    BYTE PTR [eax],al
 25f:	00 6b 02             	add    BYTE PTR [ebx+0x2],ch
 262:	00 00                	add    BYTE PTR [eax],al
 264:	0d 31 00 00 00       	or     eax,0x31
 269:	00 00                	add    BYTE PTR [eax],al
 26b:	07                   	pop    es
 26c:	04 42                	add    al,0x42
 26e:	02 00                	add    al,BYTE PTR [eax]
 270:	00 0b                	add    BYTE PTR [ebx],cl
 272:	5d                   	pop    ebp
 273:	01 00                	add    DWORD PTR [eax],eax
 275:	00 07                	add    BYTE PTR [edi],al
 277:	04 71                	add    al,0x71
 279:	02 00                	add    al,BYTE PTR [eax]
 27b:	00 0b                	add    BYTE PTR [ebx],cl
 27d:	21 01                	and    DWORD PTR [ecx],eax
 27f:	00 00                	add    BYTE PTR [eax],al
 281:	07                   	pop    es
 282:	04 7c                	add    al,0x7c
 284:	02 00                	add    al,BYTE PTR [eax]
 286:	00 0c 38             	add    BYTE PTR [eax+edi*1],cl
 289:	00 00                	add    BYTE PTR [eax],al
 28b:	00 97 02 00 00 0d    	add    BYTE PTR [edi+0xd000002],dl
 291:	31 00                	xor    DWORD PTR [eax],eax
 293:	00 00                	add    BYTE PTR [eax],al
 295:	27                   	daa    
 296:	00 0e                	add    BYTE PTR [esi],cl
 298:	cc                   	int3   
 299:	00 00                	add    BYTE PTR [eax],al
 29b:	00 06                	add    BYTE PTR [esi],al
 29d:	89 0e                	mov    DWORD PTR [esi],ecx
 29f:	a3 02 00 00 07       	mov    ds:0x7000002,eax
 2a4:	04 36                	add    al,0x36
 2a6:	02 00                	add    al,BYTE PTR [eax]
 2a8:	00 0e                	add    BYTE PTR [esi],cl
 2aa:	4b                   	dec    ebx
 2ab:	02 00                	add    al,BYTE PTR [eax]
 2ad:	00 06                	add    BYTE PTR [esi],al
 2af:	8a 0e                	mov    cl,BYTE PTR [esi]
 2b1:	a3 02 00 00 0e       	mov    ds:0xe000002,eax
 2b6:	29 00                	sub    DWORD PTR [eax],eax
 2b8:	00 00                	add    BYTE PTR [eax],al
 2ba:	06                   	push   es
 2bb:	8b 0e                	mov    ecx,DWORD PTR [esi]
 2bd:	a3 02 00 00 0e       	mov    ds:0xe000002,eax
 2c2:	b0 00                	mov    al,0x0
 2c4:	00 00                	add    BYTE PTR [eax],al
 2c6:	07                   	pop    es
 2c7:	1a 0c 67             	sbb    cl,BYTE PTR [edi+eiz*2]
 2ca:	00 00                	add    BYTE PTR [eax],al
 2cc:	00 0c e3             	add    BYTE PTR [ebx+eiz*8],cl
 2cf:	02 00                	add    al,BYTE PTR [eax]
 2d1:	00 d8                	add    al,bl
 2d3:	02 00                	add    al,BYTE PTR [eax]
 2d5:	00 0f                	add    BYTE PTR [edi],cl
 2d7:	00 04 cd 02 00 00 07 	add    BYTE PTR [ecx*8+0x7000002],al
 2de:	04 3f                	add    al,0x3f
 2e0:	00 00                	add    BYTE PTR [eax],al
 2e2:	00 04 dd 02 00 00 0e 	add    BYTE PTR [ebx*8+0xe000002],al
 2e9:	65 00 00             	add    BYTE PTR gs:[eax],al
 2ec:	00 07                	add    BYTE PTR [edi],al
 2ee:	1b 1a                	sbb    ebx,DWORD PTR [edx]
 2f0:	d8 02                	fadd   DWORD PTR [edx]
 2f2:	00 00                	add    BYTE PTR [eax],al
 2f4:	0c 38                	or     al,0x38
 2f6:	00 00                	add    BYTE PTR [eax],al
 2f8:	00 04 03             	add    BYTE PTR [ebx+eax*1],al
 2fb:	00 00                	add    BYTE PTR [eax],al
 2fd:	0d 31 00 00 00       	or     eax,0x31
 302:	07                   	pop    es
 303:	00 10                	add    BYTE PTR [eax],dl
 305:	02 01                	add    al,BYTE PTR [ecx]
 307:	00 00                	add    BYTE PTR [eax],al
 309:	01 11                	add    DWORD PTR [ecx],edx
 30b:	05 67 00 00 00       	add    eax,0x67
 310:	76 12                	jbe    324 <_init-0xcdc>
 312:	00 00                	add    BYTE PTR [eax],al
 314:	45                   	inc    ebp
 315:	00 00                	add    BYTE PTR [eax],al
 317:	00 01                	add    BYTE PTR [ecx],al
 319:	9c                   	pushf  
 31a:	11 1e                	adc    DWORD PTR [esi],ebx
 31c:	00 00                	add    BYTE PTR [eax],al
 31e:	00 01                	add    BYTE PTR [ecx],al
 320:	06                   	push   es
 321:	05 67 00 00 00       	add    eax,0x67
 326:	0d 12 00 00 69       	or     eax,0x69000012
 32b:	00 00                	add    BYTE PTR [eax],al
 32d:	00 01                	add    BYTE PTR [ecx],al
 32f:	9c                   	pushf  
 330:	12 24 00             	adc    ah,BYTE PTR [eax+eax*1]
 333:	00 00                	add    BYTE PTR [eax],al
 335:	01 07                	add    DWORD PTR [edi],eax
 337:	0a f4                	or     dh,ah
 339:	02 00                	add    al,BYTE PTR [eax]
 33b:	00 02                	add    BYTE PTR [edx],al
 33d:	91                   	xchg   ecx,eax
 33e:	68 13 fd 00 00       	push   0xfd13
 343:	00 01                	add    BYTE PTR [ecx],al
 345:	0c 05                	or     al,0x5
 347:	67 00 00             	add    BYTE PTR [bx+si],al
 34a:	00 14 00             	add    BYTE PTR [eax+eax*1],dl
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	01 11                	add    DWORD PTR [ecx],edx
   2:	01 25 0e 13 0b 03    	add    DWORD PTR ds:0x30b130e,esp
   8:	0e                   	push   cs
   9:	1b 0e                	sbb    ecx,DWORD PTR [esi]
   b:	11 01                	adc    DWORD PTR [ecx],eax
   d:	12 06                	adc    al,BYTE PTR [esi]
   f:	10 17                	adc    BYTE PTR [edi],dl
  11:	00 00                	add    BYTE PTR [eax],al
  13:	02 16                	add    dl,BYTE PTR [esi]
  15:	00 03                	add    BYTE PTR [ebx],al
  17:	0e                   	push   cs
  18:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  1a:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  1c:	39 0b                	cmp    DWORD PTR [ebx],ecx
  1e:	49                   	dec    ecx
  1f:	13 00                	adc    eax,DWORD PTR [eax]
  21:	00 03                	add    BYTE PTR [ebx],al
  23:	24 00                	and    al,0x0
  25:	0b 0b                	or     ecx,DWORD PTR [ebx]
  27:	3e 0b 03             	or     eax,DWORD PTR ds:[ebx]
  2a:	0e                   	push   cs
  2b:	00 00                	add    BYTE PTR [eax],al
  2d:	04 26                	add    al,0x26
  2f:	00 49 13             	add    BYTE PTR [ecx+0x13],cl
  32:	00 00                	add    BYTE PTR [eax],al
  34:	05 24 00 0b 0b       	add    eax,0xb0b0024
  39:	3e 0b 03             	or     eax,DWORD PTR ds:[ebx]
  3c:	08 00                	or     BYTE PTR [eax],al
  3e:	00 06                	add    BYTE PTR [esi],al
  40:	0f 00 0b             	str    WORD PTR [ebx]
  43:	0b 00                	or     eax,DWORD PTR [eax]
  45:	00 07                	add    BYTE PTR [edi],al
  47:	0f 00 0b             	str    WORD PTR [ebx]
  4a:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
  4d:	00 00                	add    BYTE PTR [eax],al
  4f:	08 13                	or     BYTE PTR [ebx],dl
  51:	01 03                	add    DWORD PTR [ebx],eax
  53:	0e                   	push   cs
  54:	0b 0b                	or     ecx,DWORD PTR [ebx]
  56:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  58:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  5a:	39 0b                	cmp    DWORD PTR [ebx],ecx
  5c:	01 13                	add    DWORD PTR [ebx],edx
  5e:	00 00                	add    BYTE PTR [eax],al
  60:	09 0d 00 03 0e 3a    	or     DWORD PTR ds:0x3a0e0300,ecx
  66:	0b 3b                	or     edi,DWORD PTR [ebx]
  68:	0b 39                	or     edi,DWORD PTR [ecx]
  6a:	0b 49 13             	or     ecx,DWORD PTR [ecx+0x13]
  6d:	38 0b                	cmp    BYTE PTR [ebx],cl
  6f:	00 00                	add    BYTE PTR [eax],al
  71:	0a 16                	or     dl,BYTE PTR [esi]
  73:	00 03                	add    BYTE PTR [ebx],al
  75:	0e                   	push   cs
  76:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  78:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  7a:	39 0b                	cmp    DWORD PTR [ebx],ecx
  7c:	00 00                	add    BYTE PTR [eax],al
  7e:	0b 13                	or     edx,DWORD PTR [ebx]
  80:	00 03                	add    BYTE PTR [ebx],al
  82:	0e                   	push   cs
  83:	3c 19                	cmp    al,0x19
  85:	00 00                	add    BYTE PTR [eax],al
  87:	0c 01                	or     al,0x1
  89:	01 49 13             	add    DWORD PTR [ecx+0x13],ecx
  8c:	01 13                	add    DWORD PTR [ebx],edx
  8e:	00 00                	add    BYTE PTR [eax],al
  90:	0d 21 00 49 13       	or     eax,0x13490021
  95:	2f                   	das    
  96:	0b 00                	or     eax,DWORD PTR [eax]
  98:	00 0e                	add    BYTE PTR [esi],cl
  9a:	34 00                	xor    al,0x0
  9c:	03 0e                	add    ecx,DWORD PTR [esi]
  9e:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  a0:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  a2:	39 0b                	cmp    DWORD PTR [ebx],ecx
  a4:	49                   	dec    ecx
  a5:	13 3f                	adc    edi,DWORD PTR [edi]
  a7:	19 3c 19             	sbb    DWORD PTR [ecx+ebx*1],edi
  aa:	00 00                	add    BYTE PTR [eax],al
  ac:	0f 21 00             	mov    eax,db0
  af:	00 00                	add    BYTE PTR [eax],al
  b1:	10 2e                	adc    BYTE PTR [esi],ch
  b3:	00 3f                	add    BYTE PTR [edi],bh
  b5:	19 03                	sbb    DWORD PTR [ebx],eax
  b7:	0e                   	push   cs
  b8:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  ba:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  bc:	39 0b                	cmp    DWORD PTR [ebx],ecx
  be:	49                   	dec    ecx
  bf:	13 11                	adc    edx,DWORD PTR [ecx]
  c1:	01 12                	add    DWORD PTR [edx],edx
  c3:	06                   	push   es
  c4:	40                   	inc    eax
  c5:	18 96 42 19 00 00    	sbb    BYTE PTR [esi+0x1942],dl
  cb:	11 2e                	adc    DWORD PTR [esi],ebp
  cd:	01 3f                	add    DWORD PTR [edi],edi
  cf:	19 03                	sbb    DWORD PTR [ebx],eax
  d1:	0e                   	push   cs
  d2:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  d4:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  d6:	39 0b                	cmp    DWORD PTR [ebx],ecx
  d8:	49                   	dec    ecx
  d9:	13 11                	adc    edx,DWORD PTR [ecx]
  db:	01 12                	add    DWORD PTR [edx],edx
  dd:	06                   	push   es
  de:	40                   	inc    eax
  df:	18 96 42 19 00 00    	sbb    BYTE PTR [esi+0x1942],dl
  e5:	12 34 00             	adc    dh,BYTE PTR [eax+eax*1]
  e8:	03 0e                	add    ecx,DWORD PTR [esi]
  ea:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  ec:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
  ee:	39 0b                	cmp    DWORD PTR [ebx],ecx
  f0:	49                   	dec    ecx
  f1:	13 02                	adc    eax,DWORD PTR [edx]
  f3:	18 00                	sbb    BYTE PTR [eax],al
  f5:	00 13                	add    BYTE PTR [ebx],dl
  f7:	2e 01 3f             	add    DWORD PTR cs:[edi],edi
  fa:	19 03                	sbb    DWORD PTR [ebx],eax
  fc:	0e                   	push   cs
  fd:	3a 0b                	cmp    cl,BYTE PTR [ebx]
  ff:	3b 0b                	cmp    ecx,DWORD PTR [ebx]
 101:	39 0b                	cmp    DWORD PTR [ebx],ecx
 103:	49                   	dec    ecx
 104:	13 3c 19             	adc    edi,DWORD PTR [ecx+ebx*1]
 107:	00 00                	add    BYTE PTR [eax],al
 109:	14 18                	adc    al,0x18
 10b:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	04 01                	add    al,0x1
   2:	00 00                	add    BYTE PTR [eax],al
   4:	03 00                	add    eax,DWORD PTR [eax]
   6:	d3 00                	rol    DWORD PTR [eax],cl
   8:	00 00                	add    BYTE PTR [eax],al
   a:	01 01                	add    DWORD PTR [ecx],eax
   c:	fb                   	sti    
   d:	0e                   	push   cs
   e:	0d 00 01 01 01       	or     eax,0x1010100
  13:	01 00                	add    DWORD PTR [eax],eax
  15:	00 00                	add    BYTE PTR [eax],al
  17:	01 00                	add    DWORD PTR [eax],eax
  19:	00 01                	add    BYTE PTR [ecx],al
  1b:	2f                   	das    
  1c:	75 73                	jne    91 <_init-0xf6f>
  1e:	72 2f                	jb     4f <_init-0xfb1>
  20:	6c                   	ins    BYTE PTR es:[edi],dx
  21:	69 62 2f 67 63 63 2f 	imul   esp,DWORD PTR [edx+0x2f],0x2f636367
  28:	78 38                	js     62 <_init-0xf9e>
  2a:	36 5f                	ss pop edi
  2c:	36 34 2d             	ss xor al,0x2d
  2f:	6c                   	ins    BYTE PTR es:[edi],dx
  30:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [esi+0x75],0x6e672d78
  37:	75 2f                	jne    68 <_init-0xf98>
  39:	39 2f                	cmp    DWORD PTR [edi],ebp
  3b:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
  42:	00 2f                	add    BYTE PTR [edi],ch
  44:	75 73                	jne    b9 <_init-0xf47>
  46:	72 2f                	jb     77 <_init-0xf89>
  48:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
  4f:	2f                   	das    
  50:	62 69 74             	bound  ebp,QWORD PTR [ecx+0x74]
  53:	73 00                	jae    55 <_init-0xfab>
  55:	2f                   	das    
  56:	75 73                	jne    cb <_init-0xf35>
  58:	72 2f                	jb     89 <_init-0xf77>
  5a:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
  61:	2f                   	das    
  62:	62 69 74             	bound  ebp,QWORD PTR [ecx+0x74]
  65:	73 2f                	jae    96 <_init-0xf6a>
  67:	74 79                	je     e2 <_init-0xf1e>
  69:	70 65                	jo     d0 <_init-0xf30>
  6b:	73 00                	jae    6d <_init-0xf93>
  6d:	2f                   	das    
  6e:	75 73                	jne    e3 <_init-0xf1d>
  70:	72 2f                	jb     a1 <_init-0xf5f>
  72:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [esi+0x63],0x6564756c
  79:	00 00                	add    BYTE PTR [eax],al
  7b:	73 68                	jae    e5 <_init-0xf1b>
  7d:	65 6c                	gs ins BYTE PTR es:[edi],dx
  7f:	6c                   	ins    BYTE PTR es:[edi],dx
  80:	5f                   	pop    edi
  81:	65 78 70             	gs js  f4 <_init-0xf0c>
  84:	6c                   	ins    BYTE PTR es:[edi],dx
  85:	6f                   	outs   dx,DWORD PTR ds:[esi]
  86:	69 74 2e 63 00 00 00 	imul   esi,DWORD PTR [esi+ebp*1+0x63],0x0
  8d:	00 
  8e:	73 74                	jae    104 <_init-0xefc>
  90:	64 64 65 66 2e 68 00 	fs fs gs cs pushw 0x100
  97:	01 
  98:	00 00                	add    BYTE PTR [eax],al
  9a:	74 79                	je     115 <_init-0xeeb>
  9c:	70 65                	jo     103 <_init-0xefd>
  9e:	73 2e                	jae    ce <_init-0xf32>
  a0:	68 00 02 00 00       	push   0x200
  a5:	73 74                	jae    11b <_init-0xee5>
  a7:	72 75                	jb     11e <_init-0xee2>
  a9:	63 74 5f 46          	arpl   WORD PTR [edi+ebx*2+0x46],si
  ad:	49                   	dec    ecx
  ae:	4c                   	dec    esp
  af:	45                   	inc    ebp
  b0:	2e 68 00 03 00 00    	cs push 0x300
  b6:	46                   	inc    esi
  b7:	49                   	dec    ecx
  b8:	4c                   	dec    esp
  b9:	45                   	inc    ebp
  ba:	2e 68 00 03 00 00    	cs push 0x300
  c0:	73 74                	jae    136 <_init-0xeca>
  c2:	64 69 6f 2e 68 00 04 	imul   ebp,DWORD PTR fs:[edi+0x2e],0x40068
  c9:	00 
  ca:	00 73 79             	add    BYTE PTR [ebx+0x79],dh
  cd:	73 5f                	jae    12e <_init-0xed2>
  cf:	65 72 72             	gs jb  144 <_init-0xebc>
  d2:	6c                   	ins    BYTE PTR es:[edi],dx
  d3:	69 73 74 2e 68 00 02 	imul   esi,DWORD PTR [ebx+0x74],0x200682e
  da:	00 00                	add    BYTE PTR [eax],al
  dc:	00 05 11 00 05 02    	add    BYTE PTR ds:0x2050011,al
  e2:	0d 12 00 00 17       	or     eax,0x17000012
  e7:	05 05 08 5b 08       	add    eax,0x85b0805
  ec:	5a                   	pop    edx
  ed:	08 21                	or     BYTE PTR [ecx],ah
  ef:	e6 05                	out    0x5,al
  f1:	01 08                	add    DWORD PTR [eax],ecx
  f3:	59                   	pop    ecx
  f4:	05 0b 68 05 05       	add    eax,0x505680b
  f9:	08 bc 08 3d 05 0c 5a 	or     BYTE PTR [eax+ecx*1+0x5a0c053d],bh
 100:	05 01 59 02 0a       	add    eax,0xa025901
 105:	00 01                	add    BYTE PTR [ecx],al
 107:	01                   	.byte 0x1

Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	5f                   	pop    edi
   1:	5f                   	pop    edi
   2:	6f                   	outs   dx,DWORD PTR ds:[esi]
   3:	66 66 36 34 5f       	data16 data16 ss xor al,0x5f
   8:	74 00                	je     a <_init-0xff6>
   a:	5f                   	pop    edi
   b:	49                   	dec    ecx
   c:	4f                   	dec    edi
   d:	5f                   	pop    edi
   e:	72 65                	jb     75 <_init-0xf8b>
  10:	61                   	popa   
  11:	64 5f                	fs pop edi
  13:	65 6e                	outs   dx,BYTE PTR gs:[esi]
  15:	64 00 73 69          	add    BYTE PTR fs:[ebx+0x69],dh
  19:	7a 65                	jp     80 <_init-0xf80>
  1b:	5f                   	pop    edi
  1c:	74 00                	je     1e <_init-0xfe2>
  1e:	70 72                	jo     92 <_init-0xf6e>
  20:	69 6e 74 5f 6e 61 6d 	imul   ebp,DWORD PTR [esi+0x74],0x6d616e5f
  27:	65 00 73 74          	add    BYTE PTR gs:[ebx+0x74],dh
  2b:	64 65 72 72          	fs gs jb a1 <_init-0xf5f>
  2f:	00 5f 49             	add    BYTE PTR [edi+0x49],bl
  32:	4f                   	dec    edi
  33:	5f                   	pop    edi
  34:	77 72                	ja     a8 <_init-0xf58>
  36:	69 74 65 5f 62 61 73 	imul   esi,DWORD PTR [ebp+eiz*2+0x5f],0x65736162
  3d:	65 
  3e:	00 5f 49             	add    BYTE PTR [edi+0x49],bl
  41:	4f                   	dec    edi
  42:	5f                   	pop    edi
  43:	62 75 66             	bound  esi,QWORD PTR [ebp+0x66]
  46:	5f                   	pop    edi
  47:	65 6e                	outs   dx,BYTE PTR gs:[esi]
  49:	64 00 5f 49          	add    BYTE PTR fs:[edi+0x49],bl
  4d:	4f                   	dec    edi
  4e:	5f                   	pop    edi
  4f:	72 65                	jb     b6 <_init-0xf4a>
  51:	61                   	popa   
  52:	64 5f                	fs pop edi
  54:	70 74                	jo     ca <_init-0xf36>
  56:	72 00                	jb     58 <_init-0xfa8>
  58:	5f                   	pop    edi
  59:	5f                   	pop    edi
  5a:	70 61                	jo     bd <_init-0xf43>
  5c:	64 35 00 5f 6d 6f    	fs xor eax,0x6f6d5f00
  62:	64 65 00 73 79       	fs add BYTE PTR gs:[ebx+0x79],dh
  67:	73 5f                	jae    c8 <_init-0xf38>
  69:	65 72 72             	gs jb  de <_init-0xf22>
  6c:	6c                   	ins    BYTE PTR es:[edi],dx
  6d:	69 73 74 00 5f 63 68 	imul   esi,DWORD PTR [ebx+0x74],0x68635f00
  74:	61                   	popa   
  75:	69 6e 00 5f 49 4f 5f 	imul   ebp,DWORD PTR [esi+0x0],0x5f4f495f
  7c:	46                   	inc    esi
  7d:	49                   	dec    ecx
  7e:	4c                   	dec    esp
  7f:	45                   	inc    ebp
  80:	00 2f                	add    BYTE PTR [edi],ch
  82:	68 6f 6d 65 2f       	push   0x2f656d6f
  87:	73 61                	jae    ea <_init-0xf16>
  89:	69 2f 65 73 73 5f    	imul   ebp,DWORD PTR [edi],0x5f737365
  8f:	64 65 6d             	fs gs ins DWORD PTR es:[edi],dx
  92:	6f                   	outs   dx,DWORD PTR ds:[esi]
  93:	00 5f 49             	add    BYTE PTR [edi+0x49],bl
  96:	4f                   	dec    edi
  97:	5f                   	pop    edi
  98:	73 61                	jae    fb <_init-0xf05>
  9a:	76 65                	jbe    101 <_init-0xeff>
  9c:	5f                   	pop    edi
  9d:	62 61 73             	bound  esp,QWORD PTR [ecx+0x73]
  a0:	65 00 75 6e          	add    BYTE PTR gs:[ebp+0x6e],dh
  a4:	73 69                	jae    10f <_init-0xef1>
  a6:	67 6e                	outs   dx,BYTE PTR ds:[si]
  a8:	65 64 20 63 68       	gs and BYTE PTR fs:[ebx+0x68],ah
  ad:	61                   	popa   
  ae:	72 00                	jb     b0 <_init-0xf50>
  b0:	73 79                	jae    12b <_init-0xed5>
  b2:	73 5f                	jae    113 <_init-0xeed>
  b4:	6e                   	outs   dx,BYTE PTR ds:[esi]
  b5:	65 72 72             	gs jb  12a <_init-0xed6>
  b8:	00 73 68             	add    BYTE PTR [ebx+0x68],dh
  bb:	6f                   	outs   dx,DWORD PTR ds:[esi]
  bc:	72 74                	jb     132 <_init-0xece>
  be:	20 75 6e             	and    BYTE PTR [ebp+0x6e],dh
  c1:	73 69                	jae    12c <_init-0xed4>
  c3:	67 6e                	outs   dx,BYTE PTR ds:[si]
  c5:	65 64 20 69 6e       	gs and BYTE PTR fs:[ecx+0x6e],ch
  ca:	74 00                	je     cc <_init-0xf34>
  cc:	73 74                	jae    142 <_init-0xebe>
  ce:	64 69 6e 00 5f 49 4f 	imul   ebp,DWORD PTR fs:[esi+0x0],0x5f4f495f
  d5:	5f 
  d6:	73 61                	jae    139 <_init-0xec7>
  d8:	76 65                	jbe    13f <_init-0xec1>
  da:	5f                   	pop    edi
  db:	65 6e                	outs   dx,BYTE PTR gs:[esi]
  dd:	64 00 5f 49          	add    BYTE PTR fs:[edi+0x49],bl
  e1:	4f                   	dec    edi
  e2:	5f                   	pop    edi
  e3:	6c                   	ins    BYTE PTR es:[edi],dx
  e4:	6f                   	outs   dx,DWORD PTR ds:[esi]
  e5:	63 6b 5f             	arpl   WORD PTR [ebx+0x5f],bp
  e8:	74 00                	je     ea <_init-0xf16>
  ea:	5f                   	pop    edi
  eb:	6d                   	ins    DWORD PTR es:[edi],dx
  ec:	61                   	popa   
  ed:	72 6b                	jb     15a <_init-0xea6>
  ef:	65 72 73             	gs jb  165 <_init-0xe9b>
  f2:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
  f5:	69 6e 74 36 34 5f 74 	imul   ebp,DWORD PTR [esi+0x74],0x745f3436
  fc:	00 67 65             	add    BYTE PTR [edi+0x65],ah
  ff:	74 73                	je     174 <_init-0xe8c>
 101:	00 6d 61             	add    BYTE PTR [ebp+0x61],ch
 104:	69 6e 00 5f 66 6c 61 	imul   ebp,DWORD PTR [esi+0x0],0x616c665f
 10b:	67 73 32             	addr16 jae 140 <_init-0xec0>
 10e:	00 5f 6f             	add    BYTE PTR [edi+0x6f],bl
 111:	6c                   	ins    BYTE PTR es:[edi],dx
 112:	64 5f                	fs pop edi
 114:	6f                   	outs   dx,DWORD PTR ds:[esi]
 115:	66 66 73 65          	data16 data16 jae 17e <_init-0xe82>
 119:	74 00                	je     11b <_init-0xee5>
 11b:	5f                   	pop    edi
 11c:	6c                   	ins    BYTE PTR es:[edi],dx
 11d:	6f                   	outs   dx,DWORD PTR ds:[esi]
 11e:	63 6b 00             	arpl   WORD PTR [ebx+0x0],bp
 121:	5f                   	pop    edi
 122:	49                   	dec    ecx
 123:	4f                   	dec    edi
 124:	5f                   	pop    edi
 125:	77 69                	ja     190 <_init-0xe70>
 127:	64 65 5f             	fs gs pop edi
 12a:	64 61                	fs popa 
 12c:	74 61                	je     18f <_init-0xe71>
 12e:	00 5f 49             	add    BYTE PTR [edi+0x49],bl
 131:	4f                   	dec    edi
 132:	5f                   	pop    edi
 133:	6d                   	ins    DWORD PTR es:[edi],dx
 134:	61                   	popa   
 135:	72 6b                	jb     1a2 <_init-0xe5e>
 137:	65 72 00             	gs jb  13a <_init-0xec6>
 13a:	5f                   	pop    edi
 13b:	63 75 72             	arpl   WORD PTR [ebp+0x72],si
 13e:	5f                   	pop    edi
 13f:	63 6f 6c             	arpl   WORD PTR [edi+0x6c],bp
 142:	75 6d                	jne    1b1 <_init-0xe4f>
 144:	6e                   	outs   dx,BYTE PTR ds:[esi]
 145:	00 6c 6f 6e          	add    BYTE PTR [edi+ebp*2+0x6e],ch
 149:	67 20 6c 6f          	and    BYTE PTR [si+0x6f],ch
 14d:	6e                   	outs   dx,BYTE PTR ds:[esi]
 14e:	67 20 75 6e          	and    BYTE PTR [di+0x6e],dh
 152:	73 69                	jae    1bd <_init-0xe43>
 154:	67 6e                	outs   dx,BYTE PTR ds:[si]
 156:	65 64 20 69 6e       	gs and BYTE PTR fs:[ecx+0x6e],ch
 15b:	74 00                	je     15d <_init-0xea3>
 15d:	5f                   	pop    edi
 15e:	49                   	dec    ecx
 15f:	4f                   	dec    edi
 160:	5f                   	pop    edi
 161:	63 6f 64             	arpl   WORD PTR [edi+0x64],bp
 164:	65 63 76 74          	arpl   WORD PTR gs:[esi+0x74],si
 168:	00 5f 66             	add    BYTE PTR [edi+0x66],bl
 16b:	69 6c 65 6e 6f 00 5f 	imul   ebp,DWORD PTR [ebp+eiz*2+0x6e],0x495f006f
 172:	49 
 173:	4f                   	dec    edi
 174:	5f                   	pop    edi
 175:	62 75 66             	bound  esi,QWORD PTR [ebp+0x66]
 178:	5f                   	pop    edi
 179:	62 61 73             	bound  esp,QWORD PTR [ecx+0x73]
 17c:	65 00 47 4e          	add    BYTE PTR gs:[edi+0x4e],al
 180:	55                   	push   ebp
 181:	20 43 31             	and    BYTE PTR [ebx+0x31],al
 184:	37                   	aaa    
 185:	20 39                	and    BYTE PTR [ecx],bh
 187:	2e 33 2e             	xor    ebp,DWORD PTR cs:[esi]
 18a:	30 20                	xor    BYTE PTR [eax],ah
 18c:	2d 6d 33 32 20       	sub    eax,0x2032336d
 191:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
 196:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
 19c:	72 69                	jb     207 <_init-0xdf9>
 19e:	63 20                	arpl   WORD PTR [eax],sp
 1a0:	2d 6d 61 72 63       	sub    eax,0x6372616d
 1a5:	68 3d 69 36 38       	push   0x3836693d
 1aa:	36 20 2d 67 20 2d 66 	and    BYTE PTR ss:0x662d2067,ch
 1b1:	6e                   	outs   dx,BYTE PTR ds:[esi]
 1b2:	6f                   	outs   dx,DWORD PTR ds:[esi]
 1b3:	2d 73 74 61 63       	sub    eax,0x63617473
 1b8:	6b 2d 70 72 6f 74 65 	imul   ebp,DWORD PTR ds:0x746f7270,0x65
 1bf:	63 74 6f 72          	arpl   WORD PTR [edi+ebp*2+0x72],si
 1c3:	20 2d 66 61 73 79    	and    BYTE PTR ds:0x79736166,ch
 1c9:	6e                   	outs   dx,BYTE PTR ds:[esi]
 1ca:	63 68 72             	arpl   WORD PTR [eax+0x72],bp
 1cd:	6f                   	outs   dx,DWORD PTR ds:[esi]
 1ce:	6e                   	outs   dx,BYTE PTR ds:[esi]
 1cf:	6f                   	outs   dx,DWORD PTR ds:[esi]
 1d0:	75 73                	jne    245 <_init-0xdbb>
 1d2:	2d 75 6e 77 69       	sub    eax,0x69776e75
 1d7:	6e                   	outs   dx,BYTE PTR ds:[esi]
 1d8:	64 2d 74 61 62 6c    	fs sub eax,0x6c626174
 1de:	65 73 20             	gs jae 201 <_init-0xdff>
 1e1:	2d 66 73 74 61       	sub    eax,0x61747366
 1e6:	63 6b 2d             	arpl   WORD PTR [ebx+0x2d],bp
 1e9:	63 6c 61 73          	arpl   WORD PTR [ecx+eiz*2+0x73],bp
 1ed:	68 2d 70 72 6f       	push   0x6f72702d
 1f2:	74 65                	je     259 <_init-0xda7>
 1f4:	63 74 69 6f          	arpl   WORD PTR [ecx+ebp*2+0x6f],si
 1f8:	6e                   	outs   dx,BYTE PTR ds:[esi]
 1f9:	20 2d 66 63 66 2d    	and    BYTE PTR ds:0x2d666366,ch
 1ff:	70 72                	jo     273 <_init-0xd8d>
 201:	6f                   	outs   dx,DWORD PTR ds:[esi]
 202:	74 65                	je     269 <_init-0xd97>
 204:	63 74 69 6f          	arpl   WORD PTR [ecx+ebp*2+0x6f],si
 208:	6e                   	outs   dx,BYTE PTR ds:[esi]
 209:	00 5f 76             	add    BYTE PTR [edi+0x76],bl
 20c:	74 61                	je     26f <_init-0xd91>
 20e:	62 6c 65 5f          	bound  ebp,QWORD PTR [ebp+eiz*2+0x5f]
 212:	6f                   	outs   dx,DWORD PTR ds:[esi]
 213:	66 66 73 65          	data16 data16 jae 27c <_init-0xd84>
 217:	74 00                	je     219 <_init-0xde7>
 219:	5f                   	pop    edi
 21a:	66 72 65             	data16 jb 282 <_init-0xd7e>
 21d:	65 72 65             	gs jb  285 <_init-0xd7b>
 220:	73 5f                	jae    281 <_init-0xd7f>
 222:	6c                   	ins    BYTE PTR es:[edi],dx
 223:	69 73 74 00 5f 66 72 	imul   esi,DWORD PTR [ebx+0x74],0x72665f00
 22a:	65 65 72 65          	gs gs jb 293 <_init-0xd6d>
 22e:	73 5f                	jae    28f <_init-0xd71>
 230:	62 75 66             	bound  esi,QWORD PTR [ebp+0x66]
 233:	00 5f 75             	add    BYTE PTR [edi+0x75],bl
 236:	6e                   	outs   dx,BYTE PTR ds:[esi]
 237:	75 73                	jne    2ac <_init-0xd54>
 239:	65 64 32 00          	gs xor al,BYTE PTR fs:[eax]
 23d:	6c                   	ins    BYTE PTR es:[edi],dx
 23e:	6f                   	outs   dx,DWORD PTR ds:[esi]
 23f:	6e                   	outs   dx,BYTE PTR ds:[esi]
 240:	67 20 6c 6f          	and    BYTE PTR [si+0x6f],ch
 244:	6e                   	outs   dx,BYTE PTR ds:[esi]
 245:	67 20 69 6e          	and    BYTE PTR [bx+di+0x6e],ch
 249:	74 00                	je     24b <_init-0xdb5>
 24b:	73 74                	jae    2c1 <_init-0xd3f>
 24d:	64 6f                	outs   dx,DWORD PTR fs:[esi]
 24f:	75 74                	jne    2c5 <_init-0xd3b>
 251:	00 73 68             	add    BYTE PTR [ebx+0x68],dh
 254:	65 6c                	gs ins BYTE PTR es:[edi],dx
 256:	6c                   	ins    BYTE PTR es:[edi],dx
 257:	5f                   	pop    edi
 258:	65 78 70             	gs js  2cb <_init-0xd35>
 25b:	6c                   	ins    BYTE PTR es:[edi],dx
 25c:	6f                   	outs   dx,DWORD PTR ds:[esi]
 25d:	69 74 2e 63 00 5f 49 	imul   esi,DWORD PTR [esi+ebp*1+0x63],0x4f495f00
 264:	4f 
 265:	5f                   	pop    edi
 266:	77 72                	ja     2da <_init-0xd26>
 268:	69 74 65 5f 65 6e 64 	imul   esi,DWORD PTR [ebp+eiz*2+0x5f],0x646e65
 26f:	00 
 270:	73 68                	jae    2da <_init-0xd26>
 272:	6f                   	outs   dx,DWORD PTR ds:[esi]
 273:	72 74                	jb     2e9 <_init-0xd17>
 275:	20 69 6e             	and    BYTE PTR [ecx+0x6e],ch
 278:	74 00                	je     27a <_init-0xd86>
 27a:	5f                   	pop    edi
 27b:	49                   	dec    ecx
 27c:	4f                   	dec    edi
 27d:	5f                   	pop    edi
 27e:	62 61 63             	bound  esp,QWORD PTR [ecx+0x63]
 281:	6b 75 70 5f          	imul   esi,DWORD PTR [ebp+0x70],0x5f
 285:	62 61 73             	bound  esp,QWORD PTR [ecx+0x73]
 288:	65 00 5f 66          	add    BYTE PTR gs:[edi+0x66],bl
 28c:	6c                   	ins    BYTE PTR es:[edi],dx
 28d:	61                   	popa   
 28e:	67 73 00             	addr16 jae 291 <_init-0xd6f>
 291:	5f                   	pop    edi
 292:	49                   	dec    ecx
 293:	4f                   	dec    edi
 294:	5f                   	pop    edi
 295:	77 72                	ja     309 <_init-0xcf7>
 297:	69 74 65 5f 70 74 72 	imul   esi,DWORD PTR [ebp+eiz*2+0x5f],0x727470
 29e:	00 
 29f:	5f                   	pop    edi
 2a0:	5f                   	pop    edi
 2a1:	6f                   	outs   dx,DWORD PTR ds:[esi]
 2a2:	66 66 5f             	data16 pop di
 2a5:	74 00                	je     2a7 <_init-0xd59>
 2a7:	5f                   	pop    edi
 2a8:	49                   	dec    ecx
 2a9:	4f                   	dec    edi
 2aa:	5f                   	pop    edi
 2ab:	72 65                	jb     312 <_init-0xcee>
 2ad:	61                   	popa   
 2ae:	64 5f                	fs pop edi
 2b0:	62 61 73             	bound  esp,QWORD PTR [ecx+0x73]
 2b3:	65 00 5f 73          	add    BYTE PTR gs:[edi+0x73],bl
 2b7:	68 6f 72 74 62       	push   0x6274726f
 2bc:	75 66                	jne    324 <_init-0xcdc>
	...
